var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Ctx.html",[0,0.163,1,1.731]],["body/interfaces/Ctx.html",[0,0.18,1,3.419,2,1.185,3,0.428,4,0.428,5,0.361,6,1.491,7,0.575,8,2.198,9,0.499,10,1.106,11,1.518,12,2.862,13,0.575,14,0.046,15,0.563,16,1.393,17,1.328,18,3.801,19,1.682,20,3.4,21,3.4,22,0.499,23,0.811,24,1.328,25,2.582,26,0.428,27,0.297,28,1.058,29,0.9,30,2.582,31,2.516,32,1.655,33,1.682,34,1.402,35,1.682,36,2.582,37,0.865,38,2.198,39,1.56,40,0.575,41,1.682,42,2.582,43,2.582,44,0.981,45,2.582,46,2.582,47,2.582,48,2.582,49,1.491,50,1.854,51,2.582,52,2.734,53,2.734,54,2.582,55,2.198,56,0.9,57,3.4,58,2.582,59,1.243,60,2.582,61,1.45,62,4.04,63,3.4,64,1.393,65,1.964,66,3.4,67,3.4,68,3.4,69,3.4,70,3.4,71,3.4,72,3.4,73,2.582,74,2.582,75,2.582,76,1.243,77,2.582,78,2.582,79,0.944,80,3.4,81,3.4,82,3.4,83,0.024,84,0.032,85,0.024]],["title/classes/Cursor.html",[23,0.452,27,0.269]],["body/classes/Cursor.html",[3,0.506,4,0.506,5,0.427,9,0.591,10,1.232,13,0.917,14,0.045,23,0.732,26,0.506,27,0.352,29,0.958,37,1.146,39,1.738,40,0.844,55,3.502,56,0.958,59,1.669,83,0.028,84,0.035,85,0.028,86,2.602,87,3.056,88,2.88,89,2.187,90,4.642,91,5.272,92,5.272,93,2.803,94,3.747,95,5.044,96,1.485,97,1.846,98,4.642,99,1.384,100,1.092,101,1.384,102,4.642,103,3.747,104,2.116,105,3.747,106,3.747,107,3.056,108,3.747,109,3.747,110,3.747,111,3.747,112,3.747,113,3.747,114,3.747]],["title/interfaces/CursorStoreInfo.html",[0,0.163,115,1.073]],["body/interfaces/CursorStoreInfo.html",[0,0.209,2,1.374,3,0.496,4,0.496,5,0.418,9,0.579,10,1.216,13,0.951,14,0.045,15,0.619,22,0.579,23,0.912,26,0.619,27,0.345,29,0.667,31,2.767,34,1.326,37,1.169,40,0.667,44,0.864,50,1.716,56,0.908,61,0.974,83,0.028,84,0.035,85,0.028,96,1.389,115,1.959,116,2.549,117,2.549,118,4.482,119,2.338,120,4.546,121,4.482,122,1.532,123,1.729,124,1.227,125,1.54,126,1.374,127,2.994,128,2.994,129,2.994,130,3.739,131,2.994,132,2.994,133,2.994,134,2.994,135,3.739,136,2.994,137,2.994,138,2.994,139,2.994,140,2.994,141,2.994,142,2.994,143,2.994]],["title/injectables/CursorStoreService.html",[122,0.958,125,1.203]],["body/injectables/CursorStoreService.html",[0,0.188,3,0.447,4,0.447,5,0.377,9,0.522,10,1.139,13,0.949,14,0.045,15,0.58,22,0.522,23,0.899,26,0.58,27,0.311,29,0.865,31,2.875,34,1.385,37,1.145,40,0.865,44,0.779,50,1.886,56,0.865,61,0.878,83,0.025,84,0.033,85,0.025,89,2.022,96,1.512,97,1.788,99,1.502,100,1.185,101,1.502,104,2.114,115,1.954,116,3.781,117,2.299,118,4.258,119,2.244,120,4.363,121,4.258,122,1.434,123,1.56,124,1.106,125,1.8,126,1.783,127,2.7,128,3.501,129,2.7,130,4.363,131,2.7,132,2.7,133,2.7,134,3.501,135,3.501,136,2.7,137,2.7,138,2.7,139,2.7,140,2.7,141,3.501,142,2.7,143,3.501,144,2.299,145,2.28,146,2.591,147,4.291,148,4.291,149,3.31,150,3.31,151,3.31,152,3.31]],["title/interfaces/DataProvider.html",[0,0.163,153,1.35]],["body/interfaces/DataProvider.html",[0,0.203,2,1.335,3,0.667,4,0.482,5,0.406,6,2.57,9,0.562,10,1.194,13,0.991,14,0.045,15,0.608,23,0.918,26,0.482,37,1.173,38,3.126,39,1.335,79,1.626,83,0.027,84,0.034,85,0.027,89,2.121,96,1.309,97,1.785,99,1.593,100,1.257,101,1.593,104,2.241,115,1.939,119,2.323,153,2.121,154,2.91,155,5.18,156,2.978,157,4.502,158,4.932,159,2.978,160,3.567,161,2.898,162,3.567,163,1.873,164,4.502,165,3.567,166,3.567,167,3.567,168,3.567,169,3.567,170,4.502,171,2.621,172,3.567,173,2.154]],["title/directives/MugenScrollBottomDirective.html",[16,0.958,174,1.073]],["body/directives/MugenScrollBottomDirective.html",[3,0.562,4,0.562,5,0.474,6,2.487,7,0.959,9,0.656,13,0.756,14,0.045,15,0.562,16,1.653,17,2.292,22,0.656,24,2.075,26,0.562,27,0.39,29,0.756,40,0.899,56,0.756,83,0.032,84,0.038,85,0.032,93,2.986,97,1.653,99,1.24,100,0.979,101,1.24,174,1.852,175,2.21,176,3.393,177,2.511,178,4.946,179,3.666,180,2.888,181,4.16,182,2.628,183,3.393,184,4.16,185,2.21,186,2.21]],["title/directives/MugenScrollDataDirective.html",[16,0.958,28,0.958]],["body/directives/MugenScrollDataDirective.html",[0,0.152,1,3.296,3,0.36,4,0.36,5,0.304,6,2.595,7,1.001,8,1.85,9,0.42,10,0.984,11,1.449,12,2.737,13,0.97,14,0.046,15,0.501,16,1.24,17,1.118,18,3.481,19,1.416,20,3.763,21,3.763,22,0.42,23,0.765,24,1.556,25,3.026,26,0.36,27,0.25,28,1.24,29,0.955,30,3.481,31,2.576,32,1.841,33,2.267,34,1.394,35,2.267,36,3.481,37,0.885,38,2.963,39,1.389,40,0.674,41,1.971,42,3.481,43,2.174,44,0.873,45,2.174,46,2.174,47,2.174,48,2.174,49,2.173,50,1.967,51,2.174,52,2.577,53,2.577,54,2.174,55,2.963,56,0.838,57,3.026,58,3.026,59,1.497,60,2.174,61,1.394,62,3.763,63,3.026,64,1.24,65,1.748,66,3.026,67,3.026,68,3.026,69,3.026,70,3.026,71,3.026,72,3.026,73,2.174,74,3.026,75,2.174,76,1.106,77,2.174,78,3.026,79,1.272,80,3.026,81,3.026,82,3.026,83,0.02,84,0.028,85,0.02,88,1.971,89,1.748,93,2.239,97,1.825,99,1.375,100,1.085,101,1.375,104,1.935,107,2.174,175,1.416,177,1.609,187,3.709,188,3.709,189,3.709,190,2.665,191,3.709,192,2.665,193,2.665,194,2.665,195,2.665,196,2.665,197,2.665,198,2.665,199,2.665,200,1.256,201,2.665,202,2.665]],["title/directives/MugenScrollTopDirective.html",[16,0.958,203,1.073]],["body/directives/MugenScrollTopDirective.html",[3,0.562,4,0.562,5,0.474,6,2.487,7,0.959,9,0.656,13,0.756,14,0.045,15,0.562,16,1.653,17,2.292,22,0.656,24,2.075,26,0.562,27,0.39,29,0.756,40,0.899,56,0.756,83,0.032,84,0.038,85,0.032,93,2.986,97,1.653,99,1.24,100,0.979,101,1.24,175,2.21,177,2.511,179,3.666,180,2.888,182,2.628,183,3.393,185,2.21,186,2.21,203,1.852,204,3.393,205,4.035,206,4.16,207,4.16]],["title/components/NgxMugenScrollComponent.html",[208,1.35,209,1.203]],["body/components/NgxMugenScrollComponent.html",[0,0.154,3,0.234,4,0.234,5,0.198,7,0.815,9,0.274,10,0.717,11,0.46,12,1.763,13,0.949,14,0.046,15,0.581,16,0.58,17,1.571,19,2.466,22,0.274,23,0.426,24,1.803,26,0.448,27,0.163,28,1.251,29,0.886,32,1.789,33,1.763,34,1.544,35,1.763,37,0.561,40,0.491,41,1.435,44,1.259,49,0.817,50,1.824,52,0.922,53,0.922,56,0.886,59,0.517,61,1.14,64,1.356,76,0.805,79,1.383,83,0.013,84,0.021,85,0.013,88,1.435,89,1.273,96,0.717,97,1.83,99,0.805,100,0.955,101,0.805,104,1.947,115,1.011,124,0.58,125,1.882,146,1.047,153,1.563,156,2.261,159,2.261,163,1.436,173,1.047,174,1.402,175,0.922,177,1.047,179,1.876,180,1.204,182,1.763,185,0.922,186,1.99,203,1.402,205,1.415,208,1.563,209,1.571,210,2.701,211,1.735,212,1.735,213,2.922,214,1.678,215,1.047,216,1.133,217,2.303,218,2.303,219,2.303,220,1.109,221,2.303,222,2.303,223,2.984,224,2.303,225,2,226,2.261,227,2.6,228,2.6,229,2.6,230,3.317,231,2.701,232,2.701,233,2.303,234,2.303,235,2.303,236,2.303,237,2.303,238,2.303,239,2.303,240,2.701,241,2.701,242,1.735,243,1.735,244,1.735,245,1.735,246,1.735,247,1.735,248,1.735,249,3.116,250,1.735,251,1.735,252,1.735,253,1.735,254,1.735,255,1.735,256,1.735,257,1.735,258,1.735,259,1.876,260,1.735,261,3.317,262,1.876,263,1.735,264,1.876,265,1.735,266,1.876,267,1.735,268,1.204,269,2.303,270,1.047,271,1.047,272,1.047,273,0.922,274,0.922,275,1.204,276,1.204,277,1.876,278,1.702,279,2.6,280,1.204,281,1.876,282,1.876,283,1.876,284,1.204,285,1.204,286,1.133,287,2.303,288,1.876,289,2.169,290,1.876,291,3.716,292,3.716,293,1.876,294,1.876,295,3.116,296,2.984,297,2.818,298,2.6,299,1.204,300,1.204,301,1.204,302,1.204,303,2.303,304,1.204,305,1.204,306,1.204,307,1.876,308,1.204,309,1.876,310,1.204,311,1.204,312,1.204,313,1.204,314,1.204,315,1.204,316,1.204,317,1.204,318,1.204,319,1.204,320,1.204,321,1.204,322,1.204,323,2.303,324,1.204,325,1.204,326,1.204,327,1.204,328,1.204,329,1.204,330,2.6,331,1.204,332,1.876,333,1.204,334,1.204,335,1.204,336,1.876,337,1.876,338,1.204,339,1.133,340,1.204,341,1.204,342,1.204,343,1.204,344,1.204,345,1.204,346,1.204,347,1.204,348,1.204,349,1.204,350,2.701,351,3.744,352,1.735,353,1.735,354,1.735,355,1.735]],["title/modules/NgxMugenScrollModule.html",[356,1.99,357,1.523]],["body/modules/NgxMugenScrollModule.html",[3,0.5,4,0.5,5,0.421,7,0.911,14,0.045,15,0.73,22,0.583,26,0.5,27,0.347,28,1.934,83,0.028,84,0.035,85,0.028,174,2.166,203,2.166,209,2.427,213,1.965,214,1.61,220,1.236,270,2.232,271,2.232,272,2.232,349,2.567,356,2.567,357,3.115,358,2.567,359,2.232,360,4.09,361,3.016,362,3.016,363,4.09,364,3.016,365,3.016,366,3.016,367,3.756,368,3.016,369,2.567,370,3.697,371,3.756,372,3.697,373,3.016]],["title/classes/NotFoundResourceError.html",[27,0.269,374,1.35]],["body/classes/NotFoundResourceError.html",[0,0.148,3,0.224,4,0.224,5,0.189,7,0.302,9,0.696,10,0.692,11,1.302,13,0.586,14,0.046,15,0.353,22,0.262,23,0.721,26,0.494,27,0.245,29,0.722,32,1.078,34,0.855,37,0.916,39,0.621,40,0.474,44,1.154,56,0.965,59,1.463,61,1.504,64,0.872,65,1.872,76,0.961,79,1.09,83,0.024,84,0.02,85,0.013,86,1.152,96,1.49,97,1.078,99,0.495,100,0.992,101,0.495,119,1.851,122,0.872,123,0.782,124,0.555,126,1.867,145,0.882,161,2.242,163,1.691,171,1.713,200,1.229,214,0.495,216,1.095,220,0.555,225,2.092,278,1.095,286,1.353,289,1.353,339,1.77,374,1.229,375,1.722,376,0.782,377,1.575,378,2.207,379,2.664,380,1.659,381,2.609,382,1.659,383,1.002,384,1.002,385,1.002,386,0.782,387,1.942,388,1.575,389,1.229,390,1.002,391,1.229,392,1.002,393,1.002,394,2.688,395,2.547,396,1.002,397,1.002,398,1.002,399,1.002,400,1.002,401,1.002,402,1.002,403,2.207,404,1.575,405,1.002,406,1.947,407,1.947,408,1.575,409,1.947,410,1.002,411,1.002,412,1.002,413,1.002,414,1.002,415,2.399,416,1.002,417,1.002,418,1.002,419,2.547,420,2.905,421,1.002,422,1.002,423,0.882,424,1.002,425,3.228,426,2.841,427,2.399,428,1.947,429,2.547,430,1.002,431,1.575,432,1.002,433,1.002,434,1.002,435,1.002,436,1.002,437,1.575,438,2.664,439,1.002,440,1.002,441,1.002,442,2.664,443,2.839,444,2.345,445,2.841,446,2.207,447,1.002,448,1.002,449,1.002,450,1.575,451,1.575,452,1.575,453,1.575,454,1.947,455,1.947,456,2.207,457,2.399,458,1.575,459,1.002,460,2.399,461,1.002,462,2.399,463,1.002,464,1.002,465,1.575,466,1.002,467,1.002,468,1.002,469,1.002,470,1.002,471,1.002,472,1.002,473,1.002,474,1.002,475,1.002,476,1.002,477,1.002,478,2.399,479,2.207,480,2.664,481,1.002,482,1.575,483,2.207,484,1.575,485,1.575,486,2.399,487,1.002,488,1.002,489,1.947,490,1.002,491,2.547,492,1.002,493,1.002,494,1.002,495,1.002,496,1.002,497,1.002,498,1.575,499,1.575,500,1.002,501,1.002,502,1.002,503,1.947,504,1.002,505,1.002,506,1.002,507,1.002,508,1.002,509,1.002,510,1.002,511,1.002,512,1.002,513,1.002,514,1.002,515,1.002,516,1.002,517,1.002,518,0.782,519,0.882,520,1.002,521,1.002,522,1.002,523,1.002,524,1.002,525,1.002,526,1.002,527,1.002,528,1.002,529,1.002,530,1.386,531,1.002,532,0.882,533,1.002,534,1.002,535,1.002]],["title/injectables/OrderedDataStoreIdxService.html",[122,0.958,391,1.35]],["body/injectables/OrderedDataStoreIdxService.html",[0,0.12,3,0.172,4,0.172,5,0.145,7,0.231,9,0.744,10,0.558,11,1.397,13,0.932,14,0.046,15,0.284,22,0.2,23,0.777,26,0.423,27,0.197,29,0.885,32,0.9,34,0.83,37,1.064,39,0.787,40,0.489,44,1.067,49,0.991,50,0.787,56,0.915,59,1.486,61,1.46,64,0.703,65,1.633,76,0.802,79,1.233,83,0.02,84,0.016,85,0.01,89,0.991,96,1.525,97,1.648,99,1.486,100,1.111,101,1.318,104,1.944,119,1.98,122,0.703,123,0.599,124,0.425,126,2.002,144,0.882,145,1.43,161,2.349,163,1.76,171,2.349,200,1.474,214,0.379,216,0.533,220,0.425,225,2.302,226,1.27,278,1.312,286,1.799,289,1.129,339,1.567,374,0.599,375,2.349,376,0.599,377,0.767,378,0.767,379,2.093,383,0.767,384,0.767,385,0.767,386,0.599,387,1.662,388,1.27,389,1.474,390,0.767,391,1.633,392,1.625,393,1.27,394,2.586,395,2.497,396,1.625,397,0.767,398,0.767,399,0.767,400,1.625,401,1.625,402,1.27,403,2.497,404,1.889,405,0.767,406,1.625,407,1.625,408,1.27,409,1.625,410,0.767,411,0.767,412,0.767,413,0.767,414,1.889,415,2.093,416,0.767,417,1.27,418,1.625,419,2.255,420,2.669,421,0.767,422,0.767,423,1.118,424,0.767,425,3.069,426,2.701,427,2.093,428,1.625,429,2.255,430,0.767,431,1.27,432,0.767,433,0.767,434,0.767,435,0.767,436,0.767,437,1.27,438,2.387,439,0.767,440,1.27,441,1.625,442,2.387,443,2.589,444,2.101,445,2.841,446,1.889,447,0.767,448,0.767,449,1.625,450,2.255,451,2.255,452,2.255,453,2.255,454,2.589,455,1.625,456,1.889,457,2.737,458,1.27,459,0.767,460,2.093,461,0.767,462,2.093,463,0.767,464,0.767,465,1.27,466,0.767,467,0.767,468,0.767,469,0.767,470,0.767,471,0.767,472,0.767,473,1.27,474,0.767,475,1.889,476,0.767,477,0.767,478,2.737,479,2.497,480,2.589,481,0.767,482,1.27,483,1.889,484,1.27,485,1.27,486,2.589,487,1.625,488,0.767,489,2.387,490,1.625,491,2.669,492,0.767,493,0.767,494,0.767,495,0.767,496,0.767,497,0.767,498,1.27,499,1.27,500,0.767,501,0.767,502,0.767,503,1.625,504,0.767,505,0.767,506,0.767,507,1.625,508,1.625,509,0.767,510,0.767,511,0.767,512,0.767,513,0.767,514,0.767,515,0.767,516,0.767,517,0.767,518,0.599,519,0.675,520,0.767,521,0.767,522,0.767,523,0.767,524,0.767,525,0.767,526,0.767,527,0.767,528,0.767,529,0.767,530,1.118,531,0.767,532,0.675,533,0.767,534,0.767,535,0.767,536,2.103,537,2.103,538,2.103,539,1.271,540,1.271,541,1.271,542,1.271,543,1.271,544,3.128,545,3.128,546,1.271,547,1.271,548,1.271,549,1.271,550,1.271,551,1.271,552,1.271,553,1.271,554,1.271,555,1.271,556,1.271,557,1.271,558,1.271,559,1.271,560,1.271,561,1.271,562,1.271]],["title/interfaces/OrderedDataStoreIdxServiceIndex.html",[0,0.163,386,1.35]],["body/interfaces/OrderedDataStoreIdxServiceIndex.html",[0,0.15,2,0.628,3,0.227,4,0.227,5,0.191,7,0.305,9,0.699,10,0.698,11,1.217,13,0.59,14,0.046,15,0.356,22,0.264,23,0.723,26,0.497,27,0.247,29,0.726,32,0.561,34,0.861,37,0.919,39,0.628,40,0.305,44,1.158,56,0.967,59,1.512,61,1.505,64,0.879,65,1.881,76,0.968,79,1.263,83,0.025,84,0.02,85,0.013,96,1.492,100,0.997,119,1.859,122,0.879,123,0.79,124,0.561,126,1.766,145,0.891,161,2.252,163,1.695,171,1.725,200,1.239,214,0.5,216,0.704,220,0.561,225,2.098,278,1.104,286,1.362,289,1.362,339,1.778,374,0.79,375,0.79,376,0.79,377,1.013,378,1.013,379,2.411,383,1.013,384,1.013,385,1.013,386,1.239,387,2.354,388,2.411,389,1.239,390,1.013,391,1.239,392,1.013,393,1.013,394,2.695,395,2.558,396,1.013,397,1.013,398,1.013,399,1.013,400,1.013,401,1.013,402,1.013,403,2.219,404,1.588,405,1.013,406,1.96,407,1.96,408,1.588,409,1.96,410,1.013,411,1.013,412,1.013,413,1.013,414,1.013,415,2.411,416,1.013,417,1.013,418,1.013,419,2.558,420,2.914,421,1.013,422,1.013,423,0.891,424,1.013,425,3.234,426,2.846,427,2.411,428,1.96,429,2.558,430,1.013,431,1.588,432,1.013,433,1.013,434,1.013,435,1.013,436,1.013,437,1.588,438,2.675,439,1.013,440,1.013,441,1.013,442,2.675,443,2.848,444,2.354,445,2.846,446,2.219,447,1.013,448,1.013,449,1.013,450,1.588,451,1.588,452,1.588,453,1.588,454,1.96,455,1.96,456,2.219,457,2.411,458,1.588,459,1.013,460,2.411,461,1.013,462,2.411,463,1.013,464,1.013,465,1.588,466,1.013,467,1.013,468,1.013,469,1.013,470,1.013,471,1.013,472,1.013,473,1.013,474,1.013,475,1.013,476,1.013,477,1.013,478,2.411,479,2.219,480,2.675,481,1.013,482,1.588,483,2.219,484,1.588,485,1.588,486,2.411,487,1.013,488,1.013,489,1.96,490,1.013,491,2.558,492,1.013,493,1.013,494,1.013,495,1.013,496,1.013,497,1.013,498,1.588,499,1.588,500,1.013,501,1.013,502,1.013,503,1.96,504,1.013,505,1.013,506,1.013,507,1.013,508,1.013,509,1.013,510,1.013,511,1.013,512,1.013,513,1.013,514,1.013,515,1.013,516,1.013,517,1.013,518,0.79,519,0.891,520,1.013,521,1.013,522,1.013,523,1.013,524,1.013,525,1.013,526,1.013,527,1.013,528,1.013,529,1.013,530,1.398,531,1.013,532,0.891,533,1.013,534,1.013,535,1.013]],["title/interfaces/OrderedDataStoreIdxServiceStore.html",[0,0.163,389,1.35]],["body/interfaces/OrderedDataStoreIdxServiceStore.html",[0,0.15,2,0.628,3,0.227,4,0.227,5,0.191,7,0.305,9,0.699,10,0.698,11,1.217,13,0.59,14,0.046,15,0.356,22,0.264,23,0.723,26,0.497,27,0.247,29,0.726,32,0.561,34,0.861,37,0.919,39,0.628,40,0.305,44,1.158,56,0.967,59,1.547,61,1.505,64,0.879,65,1.881,76,0.968,79,1.096,83,0.025,84,0.02,85,0.013,96,1.492,100,0.997,119,1.859,122,0.879,123,0.79,124,0.561,126,1.766,145,0.891,161,2.252,163,1.695,171,1.725,200,1.239,214,0.5,216,0.704,220,0.561,225,2.098,278,1.104,286,1.362,289,1.362,339,1.778,374,0.79,375,0.79,376,0.79,377,1.013,378,1.013,379,2.411,383,1.013,384,1.013,385,1.013,386,0.79,387,2.354,388,1.588,389,1.529,390,2.219,391,1.239,392,1.013,393,1.013,394,2.695,395,2.558,396,1.013,397,1.013,398,1.013,399,1.013,400,1.013,401,1.013,402,1.013,403,2.219,404,1.588,405,1.013,406,1.96,407,1.96,408,1.588,409,1.96,410,1.013,411,1.013,412,1.013,413,1.013,414,1.013,415,2.411,416,1.013,417,1.013,418,1.013,419,2.558,420,2.914,421,1.013,422,1.013,423,0.891,424,1.013,425,3.234,426,2.846,427,2.411,428,1.96,429,2.558,430,1.013,431,1.588,432,1.013,433,1.013,434,1.013,435,1.013,436,1.013,437,1.588,438,2.675,439,1.013,440,1.013,441,1.013,442,2.675,443,2.848,444,2.354,445,2.846,446,2.219,447,1.013,448,1.013,449,1.013,450,1.588,451,1.588,452,1.588,453,1.588,454,1.96,455,1.96,456,2.219,457,2.411,458,1.588,459,1.013,460,2.411,461,1.013,462,2.411,463,1.013,464,1.013,465,1.588,466,1.013,467,1.013,468,1.013,469,1.013,470,1.013,471,1.013,472,1.013,473,1.013,474,1.013,475,1.013,476,1.013,477,1.013,478,2.411,479,2.219,480,2.675,481,1.013,482,1.588,483,2.219,484,1.588,485,1.588,486,2.411,487,1.013,488,1.013,489,1.96,490,1.013,491,2.558,492,1.013,493,1.013,494,1.013,495,1.013,496,1.013,497,1.013,498,1.588,499,1.588,500,1.013,501,1.013,502,1.013,503,1.96,504,1.013,505,1.013,506,1.013,507,1.013,508,1.013,509,1.013,510,1.013,511,1.013,512,1.013,513,1.013,514,1.013,515,1.013,516,1.013,517,1.013,518,0.79,519,0.891,520,1.013,521,1.013,522,1.013,523,1.013,524,1.013,525,1.013,526,1.013,527,1.013,528,1.013,529,1.013,530,1.398,531,1.013,532,0.891,533,1.013,534,1.013,535,1.013]],["title/interfaces/ScrollBottomEvent.html",[0,0.163,273,1.523]],["body/interfaces/ScrollBottomEvent.html",[0,0.185,2,0.831,3,0.3,4,0.3,5,0.253,7,0.822,11,0.589,12,1.18,14,0.046,15,0.638,17,1.366,19,2.66,22,0.35,23,0.513,24,0.931,26,0.521,27,0.208,28,1.088,29,0.772,32,1.78,33,1.18,34,1.561,35,1.18,37,0.461,40,0.404,41,1.18,44,1.308,49,1.046,50,1.692,52,1.18,53,1.18,56,0.944,59,0.662,61,1.254,64,1.511,76,0.971,79,1.266,83,0.017,84,0.025,85,0.017,88,1.73,96,0.589,115,1.219,124,0.742,125,1.617,146,1.341,153,1.534,156,1.341,159,1.341,163,1.288,173,1.341,174,1.219,182,1.73,185,1.18,186,2.256,203,1.219,208,1.534,209,0.931,213,1.18,214,1.409,215,1.341,216,0.931,217,2.261,218,2.261,219,1.542,220,0.742,221,1.542,222,1.542,223,2.677,224,1.542,225,1.617,226,1.341,227,1.542,228,1.542,229,1.542,233,1.542,234,1.542,235,1.542,236,1.542,237,1.542,238,1.542,239,1.542,249,3.139,259,1.542,262,1.542,264,1.542,266,1.542,268,1.542,269,2.677,270,1.341,271,1.341,272,1.341,273,1.73,274,1.18,275,1.542,276,1.542,277,2.261,278,1.896,279,2.948,280,1.542,281,2.261,282,2.261,283,2.261,284,1.542,285,1.542,286,1.366,287,2.677,288,2.261,289,2.275,290,2.261,291,3.861,292,3.861,293,2.261,294,2.261,295,3.39,296,3.28,297,3.139,298,2.948,299,1.542,300,1.542,301,1.542,302,1.542,303,2.677,304,1.542,305,1.542,306,1.542,307,2.261,308,1.542,309,2.261,310,1.542,311,1.542,312,1.542,313,1.542,314,1.542,315,1.542,316,1.542,317,1.542,318,1.542,319,1.542,320,1.542,321,1.542,322,1.542,323,2.677,324,1.542,325,1.542,326,1.542,327,1.542,328,1.542,329,1.542,330,2.948,331,1.542,332,2.261,333,1.542,334,1.542,335,1.542,336,2.261,337,2.261,338,1.542,339,1.366,340,1.542,341,1.542,342,1.542,343,1.542,344,1.542,345,1.542,346,1.542,347,1.542,348,1.542]],["title/interfaces/ScrollTopEvent.html",[0,0.163,274,1.523]],["body/interfaces/ScrollTopEvent.html",[0,0.185,2,0.831,3,0.3,4,0.3,5,0.253,7,0.822,11,0.589,12,1.18,14,0.046,15,0.638,17,1.366,19,2.66,22,0.35,23,0.513,24,0.931,26,0.521,27,0.208,28,1.088,29,0.772,32,1.78,33,1.18,34,1.561,35,1.18,37,0.461,40,0.404,41,1.18,44,1.308,49,1.046,50,1.692,52,1.18,53,1.18,56,0.944,59,0.662,61,1.254,64,1.511,76,0.971,79,1.266,83,0.017,84,0.025,85,0.017,88,1.73,96,0.589,115,1.219,124,0.742,125,1.617,146,1.341,153,1.534,156,1.341,159,1.341,163,1.288,173,1.341,174,1.219,182,1.73,185,1.18,186,2.256,203,1.219,208,1.534,209,0.931,213,1.18,214,1.409,215,1.341,216,0.931,217,2.261,218,2.261,219,1.542,220,0.742,221,1.542,222,1.542,223,2.677,224,1.542,225,1.617,226,1.341,227,1.542,228,1.542,229,1.542,233,1.542,234,1.542,235,1.542,236,1.542,237,1.542,238,1.542,239,1.542,249,3.139,259,1.542,262,1.542,264,1.542,266,1.542,268,1.542,269,2.677,270,1.341,271,1.341,272,1.341,273,1.18,274,1.73,275,1.542,276,1.542,277,2.261,278,1.896,279,2.948,280,1.542,281,2.261,282,2.261,283,2.261,284,1.542,285,1.542,286,1.366,287,2.677,288,2.261,289,2.275,290,2.261,291,3.861,292,3.861,293,2.261,294,2.261,295,3.39,296,3.28,297,3.139,298,2.948,299,1.542,300,1.542,301,1.542,302,1.542,303,2.677,304,1.542,305,1.542,306,1.542,307,2.261,308,1.542,309,2.261,310,1.542,311,1.542,312,1.542,313,1.542,314,1.542,315,1.542,316,1.542,317,1.542,318,1.542,319,1.542,320,1.542,321,1.542,322,1.542,323,2.677,324,1.542,325,1.542,326,1.542,327,1.542,328,1.542,329,1.542,330,2.948,331,1.542,332,2.261,333,1.542,334,1.542,335,1.542,336,2.261,337,2.261,338,1.542,339,1.366,340,1.542,341,1.542,342,1.542,343,1.542,344,1.542,345,1.542,346,1.542,347,1.542,348,1.542]],["title/coverage.html",[563,3.182]],["body/coverage.html",[0,0.317,1,2.21,5,0.417,6,2.536,7,0.95,8,3.177,11,1.457,13,0.665,14,0.045,16,1.668,23,0.577,27,0.429,28,1.223,44,0.861,76,1.75,83,0.028,84,0.035,85,0.028,87,2.986,115,1.37,116,3.177,117,3.177,122,1.529,125,1.535,126,2.055,153,1.724,154,2.986,174,1.37,176,2.986,200,2.155,203,1.37,204,2.986,208,1.724,209,1.535,213,2.652,214,1.488,215,3.013,273,1.945,274,1.945,374,1.724,375,2.586,376,2.586,386,1.724,389,1.724,391,1.724,518,1.724,563,2.986,564,2.986,565,3.66,566,3.66,567,4.575,568,3.66,569,3.66,570,4.991,571,3.66,572,3.66,573,5.228,574,4.991,575,3.66,576,2.986,577,3.66,578,3.66]],["title/dependencies.html",[359,2.079,579,2.4]],["body/dependencies.html",[14,0.043,22,0.716,83,0.034,84,0.04,85,0.034,359,3.143,580,4.54,581,4.54,582,4.54,583,4.54,584,4.247]],["title/miscellaneous/functions.html",[585,1.957,586,2.81]],["body/miscellaneous/functions.html",[9,0.673,11,1.416,14,0.043,83,0.032,84,0.038,85,0.032,99,1.497,100,1.181,101,1.497,104,2.106,126,1.997,163,1.426,375,2.009,376,2.513,387,2.667,394,2.667,444,2.266,445,2.926,518,2.365,519,2.667,530,2.667,532,2.266,576,4.095,585,3.479,586,3.479,587,5.02,588,4.265,589,4.265]],["title/index.html",[9,0.378,590,1.957,591,1.957]],["body/index.html",[7,0.925,14,0.045,15,0.688,83,0.033,84,0.039,85,0.033,214,1.302,220,1.46,357,2.863,371,3.563,373,3.563,423,2.321,584,3.563,592,4.368,593,5.091,594,4.368,595,4.368,596,4.368,597,4.368,598,4.368,599,4.368,600,4.368,601,4.368,602,3.563,603,4.368]],["title/license.html",[590,1.957,591,1.957,604,2.4]],["body/license.html",[14,0.037,83,0.03,84,0.037,85,0.03,369,2.766,426,2.116,564,3.249,602,3.931,605,5.182,606,3.983,607,3.983,608,3.983,609,4.819,610,3.983,611,3.983,612,3.983,613,3.983,614,3.983,615,3.983,616,4.819,617,5.76,618,3.983,619,3.983,620,3.983,621,5.182,622,3.983,623,4.819,624,3.983,625,3.983,626,3.983,627,3.983,628,3.983,629,3.983,630,3.983,631,3.983,632,3.983,633,4.819,634,3.983,635,3.983,636,3.983,637,3.983,638,3.983,639,3.983,640,3.983,641,4.819,642,4.819,643,3.983,644,3.983,645,3.983,646,3.983,647,3.983,648,3.983,649,3.983,650,3.983,651,3.983,652,3.983,653,3.983,654,3.983,655,3.983,656,3.983,657,3.983,658,3.983,659,3.983,660,3.983,661,3.983,662,3.983,663,3.983,664,3.983,665,3.983,666,3.983,667,3.983,668,3.983,669,3.983,670,3.983,671,3.983]],["title/modules.html",[358,2.708]],["body/modules.html",[14,0.04,83,0.035,84,0.04,85,0.035,357,2.439,358,3.187,672,4.59,673,4.59,674,4.59,675,4.59]],["title/overview.html",[676,3.182]],["body/overview.html",[2,1.522,14,0.044,28,1.903,83,0.031,84,0.037,85,0.031,86,2.823,144,2.823,174,2.131,175,2.161,203,2.131,208,1.916,209,2.388,349,2.823,356,3.388,357,3.129,359,2.455,360,3.317,361,3.317,362,3.317,363,3.317,364,3.317,365,3.317,366,3.317,367,3.98,368,3.317,369,2.823,676,3.317,677,4.879,678,4.066,679,4.879,680,4.066]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/Ctx.html":{},"classes/Cursor.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":76,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{}}}],["0/1",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":568,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":569,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":567,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":316,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["1",{"_index":677,"title":{},"body":{"overview.html":{}}}],["1.0",{"_index":318,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["100",{"_index":46,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["11.0.9",{"_index":584,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["2",{"_index":679,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["2021",{"_index":606,"title":{},"body":{"license.html":{}}}],["3",{"_index":678,"title":{},"body":{"overview.html":{}}}],["50",{"_index":280,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["7",{"_index":680,"title":{},"body":{"overview.html":{}}}],["above",{"_index":640,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":93,"title":{},"body":{"classes/Cursor.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{}}}],["action",{"_index":665,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":355,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["add",{"_index":536,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["add(storename",{"_index":440,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["afterviewinit",{"_index":218,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["and/or",{"_index":631,"title":{},"body":{"license.html":{}}}],["angular",{"_index":595,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":22,"title":{},"body":{"interfaces/Ctx.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"dependencies.html":{}}}],["angularjs",{"_index":598,"title":{},"body":{"index.html":{}}}],["any).result",{"_index":428,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["api",{"_index":599,"title":{},"body":{"index.html":{}}}],["args",{"_index":441,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["args.foreach((arg",{"_index":447,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["arising",{"_index":669,"title":{},"body":{"license.html":{}}}],["arrange",{"_index":187,"title":{},"body":{"directives/MugenScrollDataDirective.html":{}}}],["arrange(deleteattop",{"_index":78,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["array",{"_index":59,"title":{},"body":{"interfaces/Ctx.html":{},"classes/Cursor.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["array).foreach((v",{"_index":514,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["arraybuffer",{"_index":452,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["arraybufferview",{"_index":451,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["associated",{"_index":618,"title":{},"body":{"license.html":{}}}],["async",{"_index":225,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["attached",{"_index":71,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["authors",{"_index":658,"title":{},"body":{"license.html":{}}}],["autofetchingbottom",{"_index":233,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["autofetchingtop",{"_index":234,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["autoloadscrollposition",{"_index":235,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["await",{"_index":339,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["base",{"_index":402,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["base.add",{"_index":413,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["base.get",{"_index":405,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["boolean",{"_index":79,"title":{},"body":{"interfaces/Ctx.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["bootstrap",{"_index":361,"title":{},"body":{"modules/NgxMugenScrollModule.html":{},"overview.html":{}}}],["bottom",{"_index":33,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["bottom.directive",{"_index":271,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["bottom.directive.ts",{"_index":176,"title":{},"body":{"directives/MugenScrollBottomDirective.html":{},"coverage.html":{}}}],["bottom.directive.ts:12",{"_index":184,"title":{},"body":{"directives/MugenScrollBottomDirective.html":{}}}],["bottom.directive.ts:6",{"_index":181,"title":{},"body":{"directives/MugenScrollBottomDirective.html":{}}}],["bottomcursor",{"_index":118,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{}}}],["bottomcursor.tostring",{"_index":131,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{}}}],["bottomdirective",{"_index":221,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["browse",{"_index":675,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":672,"title":{},"body":{"modules.html":{}}}],["cb",{"_index":508,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["cb(v",{"_index":515,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["charge",{"_index":613,"title":{},"body":{"license.html":{}}}],["claim",{"_index":661,"title":{},"body":{"license.html":{}}}],["class",{"_index":27,"title":{"classes/Cursor.html":{},"classes/NotFoundResourceError.html":{}},"body":{"interfaces/Ctx.html":{},"classes/Cursor.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{}}}],["classes",{"_index":86,"title":{},"body":{"classes/Cursor.html":{},"classes/NotFoundResourceError.html":{},"overview.html":{}}}],["clear",{"_index":49,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["clear(storename",{"_index":473,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["clearall",{"_index":475,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["cli",{"_index":596,"title":{},"body":{"index.html":{}}}],["cluster_ngxmugenscrollmodule",{"_index":364,"title":{},"body":{"modules/NgxMugenScrollModule.html":{},"overview.html":{}}}],["cluster_ngxmugenscrollmodule_declarations",{"_index":366,"title":{},"body":{"modules/NgxMugenScrollModule.html":{},"overview.html":{}}}],["cluster_ngxmugenscrollmodule_exports",{"_index":365,"title":{},"body":{"modules/NgxMugenScrollModule.html":{},"overview.html":{}}}],["component",{"_index":208,"title":{"components/NgxMugenScrollComponent.html":{}},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{},"overview.html":{}}}],["component_template",{"_index":352,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["components",{"_index":210,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["conditions",{"_index":639,"title":{},"body":{"license.html":{}}}],["connection",{"_index":670,"title":{},"body":{"license.html":{}}}],["console.error('mugenscrolldatadirective",{"_index":329,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["console.error('mugenscrolldatadirective.bottom",{"_index":333,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["console.error('mugenscrolldatadirective.top",{"_index":331,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["console.error('provider",{"_index":328,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["console.error(ev",{"_index":437,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["console.log(`fetch",{"_index":407,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["console.log(`filter",{"_index":509,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["console.log(`from",{"_index":494,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["console.log(`load",{"_index":136,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{}}}],["console.log(`save",{"_index":129,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{}}}],["const",{"_index":61,"title":{},"body":{"interfaces/Ctx.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["constructor",{"_index":40,"title":{},"body":{"interfaces/Ctx.html":{},"classes/Cursor.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["constructor(datas",{"_index":94,"title":{},"body":{"classes/Cursor.html":{}}}],["constructor(el",{"_index":180,"title":{},"body":{"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{}}}],["constructor(message",{"_index":380,"title":{},"body":{"classes/NotFoundResourceError.html":{}}}],["constructor(public",{"_index":383,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["constructor(template",{"_index":190,"title":{},"body":{"directives/MugenScrollDataDirective.html":{}}}],["content",{"_index":292,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["contentchild",{"_index":268,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["contentchild(mugenscrollbottomdirective",{"_index":262,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["contentchild(mugenscrolldatadirective",{"_index":264,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["contentchild(mugenscrolltopdirective",{"_index":266,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["contract",{"_index":666,"title":{},"body":{"license.html":{}}}],["copies",{"_index":633,"title":{},"body":{"license.html":{}}}],["copy",{"_index":616,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":605,"title":{},"body":{"license.html":{}}}],["countperload",{"_index":236,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["coverage",{"_index":563,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["ctx",{"_index":1,"title":{"interfaces/Ctx.html":{}},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{},"coverage.html":{}}}],["ctx.data",{"_index":82,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["current",{"_index":286,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["current.getitems",{"_index":483,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["current.tostring",{"_index":493,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["cursor",{"_index":23,"title":{"classes/Cursor.html":{}},"body":{"interfaces/Ctx.html":{},"classes/Cursor.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{}}}],["cursor([v.tostring",{"_index":48,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["cursor.continue",{"_index":506,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["cursorstoreinfo",{"_index":115,"title":{"interfaces/CursorStoreInfo.html":{}},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{}}}],["cursorstoreinfo.scrolltop",{"_index":325,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["cursorstoreservice",{"_index":125,"title":{"injectables/CursorStoreService.html":{}},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{}}}],["damages",{"_index":662,"title":{},"body":{"license.html":{}}}],["data",{"_index":11,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["data.directive",{"_index":272,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["data.directive.ts",{"_index":8,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{},"coverage.html":{}}}],["data.directive.ts:13",{"_index":198,"title":{},"body":{"directives/MugenScrollDataDirective.html":{}}}],["data.directive.ts:14",{"_index":197,"title":{},"body":{"directives/MugenScrollDataDirective.html":{}}}],["data.directive.ts:15",{"_index":201,"title":{},"body":{"directives/MugenScrollDataDirective.html":{}}}],["data.directive.ts:17",{"_index":199,"title":{},"body":{"directives/MugenScrollDataDirective.html":{}}}],["data.directive.ts:18",{"_index":191,"title":{},"body":{"directives/MugenScrollDataDirective.html":{}}}],["data.directive.ts:29",{"_index":194,"title":{},"body":{"directives/MugenScrollDataDirective.html":{}}}],["data.directive.ts:36",{"_index":202,"title":{},"body":{"directives/MugenScrollDataDirective.html":{}}}],["data.directive.ts:40",{"_index":195,"title":{},"body":{"directives/MugenScrollDataDirective.html":{}}}],["data.directive.ts:59",{"_index":196,"title":{},"body":{"directives/MugenScrollDataDirective.html":{}}}],["data.directive.ts:78",{"_index":192,"title":{},"body":{"directives/MugenScrollDataDirective.html":{}}}],["datadirective",{"_index":222,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["dataprovider",{"_index":153,"title":{"interfaces/DataProvider.html":{}},"body":{"interfaces/DataProvider.html":{},"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{}}}],["datas",{"_index":88,"title":{},"body":{"classes/Cursor.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["datas.foreach(data",{"_index":60,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["datas.map(v",{"_index":110,"title":{},"body":{"classes/Cursor.html":{}}}],["datas.reverse().foreach(data",{"_index":75,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["datasmap",{"_index":30,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["date",{"_index":450,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["db",{"_index":394,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"miscellaneous/functions.html":{}}}],["db.createobjectstore",{"_index":521,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["db.objectstorenames",{"_index":477,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["db.objectstorenames.contains(storename",{"_index":520,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["db.transaction(storename",{"_index":533,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["dbname",{"_index":396,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["deal",{"_index":620,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":671,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":360,"title":{},"body":{"modules/NgxMugenScrollModule.html":{},"overview.html":{}}}],["decorators",{"_index":261,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["default",{"_index":544,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["defined",{"_index":97,"title":{},"body":{"classes/Cursor.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{}}}],["delete",{"_index":145,"title":{},"body":{"injectables/CursorStoreService.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["delete(p",{"_index":141,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{}}}],["delete(storename",{"_index":542,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["deleteattop",{"_index":193,"title":{},"body":{"directives/MugenScrollDataDirective.html":{}}}],["delimiter",{"_index":95,"title":{},"body":{"classes/Cursor.html":{}}}],["dependencies",{"_index":359,"title":{"dependencies.html":{}},"body":{"modules/NgxMugenScrollModule.html":{},"dependencies.html":{},"overview.html":{}}}],["direction",{"_index":491,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["directive",{"_index":16,"title":{"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{}},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"coverage.html":{}}}],["directives",{"_index":175,"title":{},"body":{"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"overview.html":{}}}],["distribute",{"_index":629,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":564,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":211,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["el",{"_index":182,"title":{},"body":{"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["element",{"_index":179,"title":{},"body":{"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{}}}],["elementref",{"_index":17,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["embeddedviewref",{"_index":18,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["end",{"_index":479,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["end.getitems",{"_index":484,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["entities",{"_index":305,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["entities.foreach(entity",{"_index":306,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["entity.isintersecting",{"_index":309,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["entity.target",{"_index":307,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["eof",{"_index":502,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["error",{"_index":377,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["error('db",{"_index":416,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["error('mugenscrollbottomdirective",{"_index":290,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["error('mugenscrolldatadirective",{"_index":296,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["error('mugenscrolltopdirective",{"_index":294,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["error('provider",{"_index":298,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["error(`cannot",{"_index":534,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["ev",{"_index":425,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["ev.target",{"_index":427,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["event",{"_index":426,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"license.html":{}}}],["eventemitter",{"_index":249,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["example",{"_index":601,"title":{},"body":{"index.html":{}}}],["export",{"_index":26,"title":{},"body":{"interfaces/Ctx.html":{},"classes/Cursor.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["exports",{"_index":363,"title":{},"body":{"modules/NgxMugenScrollModule.html":{},"overview.html":{}}}],["express",{"_index":649,"title":{},"body":{"license.html":{}}}],["false",{"_index":278,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["fetch",{"_index":401,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["fetch(base",{"_index":546,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["fetchbottom",{"_index":156,"title":{},"body":{"interfaces/DataProvider.html":{},"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["fetchbottom(cursor",{"_index":160,"title":{},"body":{"interfaces/DataProvider.html":{}}}],["fetcher",{"_index":404,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["fetchoninit",{"_index":157,"title":{},"body":{"interfaces/DataProvider.html":{}}}],["fetchoninit(n",{"_index":164,"title":{},"body":{"interfaces/DataProvider.html":{}}}],["fetchonload",{"_index":158,"title":{},"body":{"interfaces/DataProvider.html":{}}}],["fetchonload(info",{"_index":166,"title":{},"body":{"interfaces/DataProvider.html":{}}}],["fetchtop",{"_index":159,"title":{},"body":{"interfaces/DataProvider.html":{},"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["fetchtop(cursor",{"_index":168,"title":{},"body":{"interfaces/DataProvider.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Ctx.html":{},"classes/Cursor.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{}}}],["files",{"_index":619,"title":{},"body":{"license.html":{}}}],["filter",{"_index":507,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["filter(storename",{"_index":548,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["find",{"_index":411,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["fitness",{"_index":654,"title":{},"body":{"license.html":{}}}],["following",{"_index":638,"title":{},"body":{"license.html":{}}}],["free",{"_index":612,"title":{},"body":{"license.html":{}}}],["function",{"_index":200,"title":{},"body":{"directives/MugenScrollDataDirective.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"coverage.html":{}}}],["functions",{"_index":586,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":636,"title":{},"body":{"license.html":{}}}],["generated",{"_index":594,"title":{},"body":{"index.html":{}}}],["get(p",{"_index":143,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{}}}],["get(storename",{"_index":551,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["getelement",{"_index":183,"title":{},"body":{"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollTopDirective.html":{}}}],["getitem",{"_index":90,"title":{},"body":{"classes/Cursor.html":{}}}],["getitem(i",{"_index":102,"title":{},"body":{"classes/Cursor.html":{}}}],["getitems",{"_index":91,"title":{},"body":{"classes/Cursor.html":{}}}],["getlargern",{"_index":537,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["getlargern(storename",{"_index":553,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["getlength",{"_index":107,"title":{},"body":{"classes/Cursor.html":{},"directives/MugenScrollDataDirective.html":{}}}],["getsmallern",{"_index":487,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["getsmallern(storename",{"_index":555,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["getting",{"_index":590,"title":{"index.html":{},"license.html":{}},"body":{}}],["granted",{"_index":611,"title":{},"body":{"license.html":{}}}],["hereby",{"_index":610,"title":{},"body":{"license.html":{}}}],["holders",{"_index":659,"title":{},"body":{"license.html":{}}}],["html",{"_index":350,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["htmlelement",{"_index":185,"title":{},"body":{"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["htmlelement).scroll(0",{"_index":324,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["htmlelement).scrolltop",{"_index":338,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["i.bottomcursor.tostring",{"_index":137,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{}}}],["i.n",{"_index":139,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{}}}],["i.scrolltop",{"_index":140,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{}}}],["i.topcursor.tostring",{"_index":138,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{}}}],["idbarraykey",{"_index":453,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["idbcursorwithvalue",{"_index":501,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["idbdatabase",{"_index":395,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["idbfactory",{"_index":393,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["idbkeyrange",{"_index":454,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["idbkeyrange.bound",{"_index":482,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["idbkeyrange.lowerbound(current.getitems",{"_index":481,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["idbkeyrange.upperbound(current.getitems",{"_index":488,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["idbrequest",{"_index":512,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["idbtransaction",{"_index":532,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"miscellaneous/functions.html":{}}}],["identifier",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["idx",{"_index":456,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["idx.get(query",{"_index":459,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["idx.getkey(key",{"_index":466,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["idx.service.ts",{"_index":376,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["idx.service.ts:105",{"_index":539,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["idx.service.ts:113",{"_index":552,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["idx.service.ts:138",{"_index":543,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["idx.service.ts:171",{"_index":540,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["idx.service.ts:186",{"_index":541,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["idx.service.ts:198",{"_index":554,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["idx.service.ts:225",{"_index":556,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["idx.service.ts:252",{"_index":559,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["idx.service.ts:29",{"_index":562,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["idx.service.ts:293",{"_index":550,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["idx.service.ts:30",{"_index":561,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["idx.service.ts:31",{"_index":538,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["idx.service.ts:39",{"_index":547,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["idx.service.ts:6",{"_index":381,"title":{},"body":{"classes/NotFoundResourceError.html":{}}}],["idx.service.ts:67",{"_index":560,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["idx.service.ts:7",{"_index":382,"title":{},"body":{"classes/NotFoundResourceError.html":{}}}],["idx.service.ts:75",{"_index":557,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["implements",{"_index":216,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["implied",{"_index":650,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/Ctx.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"index.html":{}}}],["imports",{"_index":373,"title":{},"body":{"modules/NgxMugenScrollModule.html":{},"index.html":{}}}],["included",{"_index":643,"title":{},"body":{"license.html":{}}}],["includeequal",{"_index":161,"title":{},"body":{"interfaces/DataProvider.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["including",{"_index":623,"title":{},"body":{"license.html":{}}}],["indecies",{"_index":519,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"miscellaneous/functions.html":{}}}],["indecies.foreach(v",{"_index":522,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/Ctx.html":{},"classes/Cursor.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"miscellaneous/functions.html":{}}}],["indexed",{"_index":409,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["indexeddb",{"_index":392,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["indexname",{"_index":478,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["indices",{"_index":390,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["infinite",{"_index":597,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Ctx.html":{},"classes/Cursor.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["init",{"_index":226,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["init(version",{"_index":417,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["initstore",{"_index":518,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["initstore(db",{"_index":588,"title":{},"body":{"miscellaneous/functions.html":{}}}],["injectable",{"_index":122,"title":{"injectables/CursorStoreService.html":{},"injectables/OrderedDataStoreIdxService.html":{}},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"coverage.html":{}}}],["injectables",{"_index":144,"title":{},"body":{"injectables/CursorStoreService.html":{},"injectables/OrderedDataStoreIdxService.html":{},"overview.html":{}}}],["input",{"_index":19,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["inputs",{"_index":232,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Ctx.html":{},"interfaces/CursorStoreInfo.html":{},"interfaces/DataProvider.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}},"body":{"interfaces/Ctx.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Ctx.html":{},"interfaces/CursorStoreInfo.html":{},"interfaces/DataProvider.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"overview.html":{}}}],["intersectionobserver",{"_index":223,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["iter",{"_index":490,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["iter(storename",{"_index":558,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["key",{"_index":403,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["key2",{"_index":465,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["key2.onerror",{"_index":472,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["key2.onsuccess",{"_index":467,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["keypath",{"_index":387,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"miscellaneous/functions.html":{}}}],["kind",{"_index":648,"title":{},"body":{"license.html":{}}}],["legend",{"_index":349,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"overview.html":{}}}],["length",{"_index":55,"title":{},"body":{"interfaces/Ctx.html":{},"classes/Cursor.html":{},"directives/MugenScrollDataDirective.html":{}}}],["liability",{"_index":663,"title":{},"body":{"license.html":{}}}],["liable",{"_index":660,"title":{},"body":{"license.html":{}}}],["lib",{"_index":219,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["libmugenscrollbottom",{"_index":178,"title":{},"body":{"directives/MugenScrollBottomDirective.html":{}}}],["libmugenscrollbottom]'},{'name",{"_index":353,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["libmugenscrolldata",{"_index":25,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["libmugenscrolldata]'},{'name",{"_index":354,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["libmugenscrolltop",{"_index":205,"title":{},"body":{"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{}}}],["library",{"_index":593,"title":{},"body":{"index.html":{}}}],["license",{"_index":604,"title":{"license.html":{}},"body":{}}],["limitation",{"_index":624,"title":{},"body":{"license.html":{}}}],["limited",{"_index":651,"title":{},"body":{"license.html":{}}}],["load",{"_index":146,"title":{},"body":{"injectables/CursorStoreService.html":{},"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["load(p",{"_index":134,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{}}}],["map",{"_index":31,"title":{},"body":{"interfaces/Ctx.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"directives/MugenScrollDataDirective.html":{}}}],["matching",{"_index":84,"title":{},"body":{"interfaces/Ctx.html":{},"classes/Cursor.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["max",{"_index":36,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["merchantability",{"_index":653,"title":{},"body":{"license.html":{}}}],["merge",{"_index":627,"title":{},"body":{"license.html":{}}}],["message",{"_index":378,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["metadata",{"_index":177,"title":{},"body":{"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{}}}],["methods",{"_index":89,"title":{},"body":{"classes/Cursor.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"injectables/OrderedDataStoreIdxService.html":{}}}],["miscellaneous",{"_index":585,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mode",{"_index":530,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"miscellaneous/functions.html":{}}}],["modify",{"_index":626,"title":{},"body":{"license.html":{}}}],["module",{"_index":356,"title":{"modules/NgxMugenScrollModule.html":{}},"body":{"modules/NgxMugenScrollModule.html":{},"overview.html":{}}}],["modules",{"_index":358,"title":{"modules.html":{}},"body":{"modules/NgxMugenScrollModule.html":{},"modules.html":{}}}],["mugen",{"_index":214,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{},"index.html":{}}}],["mugenscrollbottomdirective",{"_index":174,"title":{"directives/MugenScrollBottomDirective.html":{}},"body":{"directives/MugenScrollBottomDirective.html":{},"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{},"overview.html":{}}}],["mugenscrolldatadirective",{"_index":28,"title":{"directives/MugenScrollDataDirective.html":{}},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{},"overview.html":{}}}],["mugenscrolltopdirective",{"_index":203,"title":{"directives/MugenScrollTopDirective.html":{}},"body":{"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{},"overview.html":{}}}],["n",{"_index":119,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["name",{"_index":100,"title":{},"body":{"classes/Cursor.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":603,"title":{},"body":{"index.html":{}}}],["new",{"_index":44,"title":{},"body":{"interfaces/Ctx.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{}}}],["newcursor",{"_index":38,"title":{},"body":{"interfaces/Ctx.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollDataDirective.html":{}}}],["newcursor(v",{"_index":170,"title":{},"body":{"interfaces/DataProvider.html":{}}}],["next",{"_index":486,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["ng",{"_index":291,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["ngafterviewinit",{"_index":227,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["ngmodule",{"_index":371,"title":{},"body":{"modules/NgxMugenScrollModule.html":{},"index.html":{}}}],["ngoninit",{"_index":228,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["ngx",{"_index":220,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"index.html":{}}}],["ngxmugenscroll",{"_index":592,"title":{},"body":{"index.html":{}}}],["ngxmugenscrollcomponent",{"_index":209,"title":{"components/NgxMugenScrollComponent.html":{}},"body":{"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{},"overview.html":{}}}],["ngxmugenscrollmodule",{"_index":357,"title":{"modules/NgxMugenScrollModule.html":{}},"body":{"modules/NgxMugenScrollModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["noninfringement",{"_index":657,"title":{},"body":{"license.html":{}}}],["notfoundresourceerror",{"_index":374,"title":{"classes/NotFoundResourceError.html":{}},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"coverage.html":{}}}],["notfoundresourceerror(`cannot",{"_index":410,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["notice",{"_index":641,"title":{},"body":{"license.html":{}}}],["null",{"_index":457,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["number",{"_index":37,"title":{},"body":{"interfaces/Ctx.html":{},"classes/Cursor.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["object",{"_index":12,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["objectstorenames",{"_index":476,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["obtaining",{"_index":615,"title":{},"body":{"license.html":{}}}],["oninit",{"_index":217,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["optional",{"_index":101,"title":{},"body":{"classes/Cursor.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"miscellaneous/functions.html":{}}}],["ordereddatastoreidxservice",{"_index":391,"title":{"injectables/OrderedDataStoreIdxService.html":{}},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"coverage.html":{}}}],["ordereddatastoreidxserviceindex",{"_index":386,"title":{"interfaces/OrderedDataStoreIdxServiceIndex.html":{}},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"coverage.html":{}}}],["ordereddatastoreidxservicestore",{"_index":389,"title":{"interfaces/OrderedDataStoreIdxServiceStore.html":{}},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"coverage.html":{}}}],["otherwise",{"_index":668,"title":{},"body":{"license.html":{}}}],["out",{"_index":369,"title":{},"body":{"modules/NgxMugenScrollModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":269,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["outputs",{"_index":240,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["overview",{"_index":676,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":130,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{}}}],["package",{"_index":579,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":99,"title":{},"body":{"classes/Cursor.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":655,"title":{},"body":{"license.html":{}}}],["peer",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["permission",{"_index":609,"title":{},"body":{"license.html":{}}}],["permit",{"_index":634,"title":{},"body":{"license.html":{}}}],["person",{"_index":614,"title":{},"body":{"license.html":{}}}],["persons",{"_index":635,"title":{},"body":{"license.html":{}}}],["portions",{"_index":645,"title":{},"body":{"license.html":{}}}],["prev",{"_index":489,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["previous",{"_index":299,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["private",{"_index":29,"title":{},"body":{"interfaces/Ctx.html":{},"classes/Cursor.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["promise",{"_index":163,"title":{},"body":{"interfaces/DataProvider.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":419,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["promise>((resolve",{"_index":499,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["properties",{"_index":10,"title":{},"body":{"interfaces/Ctx.html":{},"classes/Cursor.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["provided",{"_index":646,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":123,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["provider",{"_index":237,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["providers",{"_index":362,"title":{},"body":{"modules/NgxMugenScrollModule.html":{},"overview.html":{}}}],["public",{"_index":32,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["publish",{"_index":628,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":656,"title":{},"body":{"license.html":{}}}],["push",{"_index":188,"title":{},"body":{"directives/MugenScrollDataDirective.html":{}}}],["push(...datas",{"_index":58,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["query",{"_index":449,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["r",{"_index":65,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["r.detectchanges",{"_index":68,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["r.onerror",{"_index":462,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["r.onsuccess",{"_index":460,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["r.rootnodes[0].setattribute('_cursor",{"_index":67,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["r2",{"_index":511,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["r2.result",{"_index":513,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["range",{"_index":480,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["range.lower",{"_index":495,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["range.upper",{"_index":496,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["readonly",{"_index":379,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["readwrite",{"_index":446,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["ref",{"_index":80,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["references",{"_index":600,"title":{},"body":{"index.html":{}}}],["reject",{"_index":420,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["reject(ev",{"_index":438,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["reject(r.error",{"_index":463,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["remote",{"_index":412,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["request",{"_index":421,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["request.onblocked",{"_index":436,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["request.onerror",{"_index":439,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["request.onsuccess",{"_index":424,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["request.onupgradeneeded",{"_index":430,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["reset",{"_index":368,"title":{},"body":{"modules/NgxMugenScrollModule.html":{},"overview.html":{}}}],["resolve",{"_index":429,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["resolve(r.result",{"_index":461,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["resolve(ret",{"_index":503,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["restriction",{"_index":622,"title":{},"body":{"license.html":{}}}],["result",{"_index":83,"title":{},"body":{"interfaces/Ctx.html":{},"classes/Cursor.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":85,"title":{},"body":{"interfaces/Ctx.html":{},"classes/Cursor.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["resultsinitstore",{"_index":431,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["resultsinitstore.push(initstore(db",{"_index":433,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["ret",{"_index":498,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["ret.push(cursor.value",{"_index":504,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["ret.push(v",{"_index":516,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["ret.unshift(cursor.value",{"_index":505,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["ret.unshift(v",{"_index":517,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["return",{"_index":56,"title":{},"body":{"interfaces/Ctx.html":{},"classes/Cursor.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["returns",{"_index":104,"title":{},"body":{"classes/Cursor.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"injectables/OrderedDataStoreIdxService.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":625,"title":{},"body":{"license.html":{}}}],["root",{"_index":124,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["rootmargin",{"_index":315,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["s",{"_index":347,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["save",{"_index":147,"title":{},"body":{"injectables/CursorStoreService.html":{}}}],["save(p",{"_index":128,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{}}}],["savescrollposition",{"_index":229,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["scroll",{"_index":7,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{},"index.html":{}}}],["scroll.component",{"_index":372,"title":{},"body":{"modules/NgxMugenScrollModule.html":{}}}],["scroll.component.ts",{"_index":215,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{}}}],["scroll.component.ts:160",{"_index":257,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scroll.component.ts:186",{"_index":252,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scroll.component.ts:204",{"_index":253,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scroll.component.ts:22",{"_index":263,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scroll.component.ts:224",{"_index":260,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scroll.component.ts:25",{"_index":267,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scroll.component.ts:258",{"_index":258,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scroll.component.ts:28",{"_index":265,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scroll.component.ts:31",{"_index":246,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scroll.component.ts:34",{"_index":248,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scroll.component.ts:37",{"_index":247,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scroll.component.ts:40",{"_index":245,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scroll.component.ts:43",{"_index":242,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scroll.component.ts:46",{"_index":243,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scroll.component.ts:49",{"_index":244,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scroll.component.ts:52",{"_index":250,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scroll.component.ts:55",{"_index":251,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scroll.component.ts:57",{"_index":241,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scroll.component.ts:73",{"_index":256,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scroll.component.ts:76",{"_index":255,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scroll.component.ts:80",{"_index":254,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scroll.module.ts",{"_index":370,"title":{},"body":{"modules/NgxMugenScrollModule.html":{}}}],["scroll.ts",{"_index":154,"title":{},"body":{"interfaces/DataProvider.html":{},"coverage.html":{}}}],["scroll.ts:10",{"_index":167,"title":{},"body":{"interfaces/DataProvider.html":{}}}],["scroll.ts:12",{"_index":165,"title":{},"body":{"interfaces/DataProvider.html":{}}}],["scroll.ts:13",{"_index":172,"title":{},"body":{"interfaces/DataProvider.html":{}}}],["scroll.ts:6",{"_index":162,"title":{},"body":{"interfaces/DataProvider.html":{}}}],["scroll.ts:8",{"_index":169,"title":{},"body":{"interfaces/DataProvider.html":{}}}],["scrollbottom",{"_index":230,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scrollbottomevent",{"_index":273,"title":{"interfaces/ScrollBottomEvent.html":{}},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{}}}],["scrollbottomoninit",{"_index":238,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["scrollid",{"_index":155,"title":{},"body":{"interfaces/DataProvider.html":{}}}],["scrolltop",{"_index":120,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{}}}],["scrolltopat",{"_index":231,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["scrolltopat(at",{"_index":259,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["scrolltopevent",{"_index":274,"title":{"interfaces/ScrollTopEvent.html":{}},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{}}}],["selector",{"_index":24,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["sell",{"_index":632,"title":{},"body":{"license.html":{}}}],["shall",{"_index":642,"title":{},"body":{"license.html":{}}}],["software",{"_index":617,"title":{},"body":{"license.html":{}}}],["sort",{"_index":497,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Ctx.html":{},"classes/Cursor.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["src/.../ordered",{"_index":587,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/cursor",{"_index":116,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"coverage.html":{}}}],["src/lib/cursor.ts",{"_index":87,"title":{},"body":{"classes/Cursor.html":{},"coverage.html":{}}}],["src/lib/cursor.ts:10",{"_index":106,"title":{},"body":{"classes/Cursor.html":{}}}],["src/lib/cursor.ts:13",{"_index":103,"title":{},"body":{"classes/Cursor.html":{}}}],["src/lib/cursor.ts:16",{"_index":105,"title":{},"body":{"classes/Cursor.html":{}}}],["src/lib/cursor.ts:2",{"_index":98,"title":{},"body":{"classes/Cursor.html":{}}}],["src/lib/cursor.ts:9",{"_index":108,"title":{},"body":{"classes/Cursor.html":{}}}],["src/lib/mugen",{"_index":6,"title":{},"body":{"interfaces/Ctx.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"coverage.html":{}}}],["src/lib/ngx",{"_index":213,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{},"coverage.html":{}}}],["src/lib/ordered",{"_index":375,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":591,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":287,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["statements",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":400,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["store",{"_index":126,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["store.clear",{"_index":474,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["store.createindex",{"_index":523,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["store.delete(key",{"_index":464,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["store.index(index",{"_index":458,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["store.indices",{"_index":435,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["store.keypath",{"_index":434,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["store.name",{"_index":406,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["store.name}.${index}.${key",{"_index":408,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["store.service",{"_index":173,"title":{},"body":{"interfaces/DataProvider.html":{},"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["store.service.ts",{"_index":117,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"coverage.html":{}}}],["store.service.ts:16",{"_index":148,"title":{},"body":{"injectables/CursorStoreService.html":{}}}],["store.service.ts:22",{"_index":152,"title":{},"body":{"injectables/CursorStoreService.html":{}}}],["store.service.ts:27",{"_index":151,"title":{},"body":{"injectables/CursorStoreService.html":{}}}],["store.service.ts:36",{"_index":149,"title":{},"body":{"injectables/CursorStoreService.html":{}}}],["store.service.ts:40",{"_index":150,"title":{},"body":{"injectables/CursorStoreService.html":{}}}],["store.transaction.onabort",{"_index":528,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["store.transaction.oncomplete",{"_index":527,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["store.transaction.onerror",{"_index":529,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["storename",{"_index":445,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"miscellaneous/functions.html":{}}}],["storename}.${indexname",{"_index":492,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["stores",{"_index":418,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["stores.foreach(async",{"_index":432,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["string",{"_index":96,"title":{},"body":{"classes/Cursor.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["styles",{"_index":275,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["subject",{"_index":637,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":630,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":644,"title":{},"body":{"license.html":{}}}],["support",{"_index":673,"title":{},"body":{"modules.html":{}}}],["suzuki",{"_index":608,"title":{},"body":{"license.html":{}}}],["svg",{"_index":674,"title":{},"body":{"modules.html":{}}}],["t",{"_index":171,"title":{},"body":{"interfaces/DataProvider.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["t,i",{"_index":549,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["table",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["taito",{"_index":607,"title":{},"body":{"license.html":{}}}],["target",{"_index":468,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["target.result",{"_index":470,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["template",{"_index":41,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["templateref",{"_index":20,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["then(resolve).catch(reject",{"_index":471,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["this.arrange(false",{"_index":77,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["this.arrange(true",{"_index":73,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["this.autofetchingbottom",{"_index":281,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.autofetchingtop",{"_index":282,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.autoloadscrollposition",{"_index":283,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.bottom",{"_index":53,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.bottom.emit",{"_index":313,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.bottomdirective",{"_index":288,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.bottomdirective.element",{"_index":312,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.constructor.name",{"_index":385,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["this.countperload",{"_index":279,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.cursorstoreservice.load(this.provider.scrollid",{"_index":321,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.cursorstoreservice.save",{"_index":334,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.datadirective",{"_index":295,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.datadirective.bottom",{"_index":332,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.datadirective.clear",{"_index":300,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.datadirective.newcursor",{"_index":301,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.datadirective.push(...datas",{"_index":323,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.datadirective.top",{"_index":330,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.datadirective.unshift(...datas",{"_index":343,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.datas",{"_index":109,"title":{},"body":{"classes/Cursor.html":{}}}],["this.datas.join(this.delimiter",{"_index":112,"title":{},"body":{"classes/Cursor.html":{}}}],["this.datas.length",{"_index":111,"title":{},"body":{"classes/Cursor.html":{}}}],["this.datas.map(v",{"_index":114,"title":{},"body":{"classes/Cursor.html":{}}}],["this.datas[i",{"_index":113,"title":{},"body":{"classes/Cursor.html":{}}}],["this.datasmap",{"_index":43,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["this.datasmap.clear",{"_index":54,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["this.datasmap.has(cursor.tostring",{"_index":63,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["this.datasmap.set(cursor.tostring",{"_index":72,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["this.db",{"_index":415,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["this.dbname",{"_index":397,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["this.delete(storename",{"_index":469,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["this.el.nativeelement",{"_index":186,"title":{},"body":{"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.fetchbottom",{"_index":314,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.fetchtop",{"_index":311,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.indexeddb",{"_index":398,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["this.indexeddb.open(this.dbname",{"_index":422,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["this.init",{"_index":284,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.intersectionobserver",{"_index":303,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.intersectionobserver.disconnect",{"_index":304,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.intersectionobserver.observe(this.bottomdirective.element",{"_index":319,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.intersectionobserver.observe(this.topdirective.element",{"_index":320,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.iter",{"_index":485,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["this.max",{"_index":45,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["this.name",{"_index":384,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["this.newcursor",{"_index":47,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["this.newcursor(data",{"_index":62,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["this.provider",{"_index":297,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.provider.fetchbottom",{"_index":340,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.provider.fetchoninit(this.countperload).then(datas",{"_index":326,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.provider.fetchonload(cursorstoreinfo).then(datas",{"_index":322,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.provider.fetchtop",{"_index":341,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.provider.newcursor",{"_index":302,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.provider.newcursor(at",{"_index":348,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.provider.newcursor(at).tostring",{"_index":346,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.provider.newcursor(this.datadirective.bottom",{"_index":336,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.provider.newcursor(this.datadirective.top",{"_index":337,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.provider.newcursor(this.datadirective.top).tostring",{"_index":345,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.provider.scrollid",{"_index":335,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.scrollbottom",{"_index":327,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.scrollbottomoninit",{"_index":277,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.scrolltopat(topbeforeadded",{"_index":344,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.store",{"_index":127,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{}}}],["this.store.delete(p",{"_index":142,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{}}}],["this.store.get(p",{"_index":135,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{}}}],["this.store.set(p",{"_index":133,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{}}}],["this.top",{"_index":52,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.top.emit",{"_index":310,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.topdirective",{"_index":293,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.topdirective.element",{"_index":308,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.uniqid",{"_index":276,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["this.validdb",{"_index":442,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["this.viewcontainer.clear",{"_index":51,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["this.viewcontainer.createembeddedview(this.template",{"_index":66,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["this.viewcontainer.length",{"_index":57,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["threshold",{"_index":317,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["throw",{"_index":289,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["top",{"_index":35,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["top.directive",{"_index":270,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"modules/NgxMugenScrollModule.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["top.directive.ts",{"_index":204,"title":{},"body":{"directives/MugenScrollTopDirective.html":{},"coverage.html":{}}}],["top.directive.ts:13",{"_index":207,"title":{},"body":{"directives/MugenScrollTopDirective.html":{}}}],["top.directive.ts:6",{"_index":206,"title":{},"body":{"directives/MugenScrollTopDirective.html":{}}}],["topbeforeadded",{"_index":342,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["topcursor",{"_index":121,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{}}}],["topcursor.tostring",{"_index":132,"title":{},"body":{"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{}}}],["topdirective",{"_index":224,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["tort",{"_index":667,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":92,"title":{},"body":{"classes/Cursor.html":{}}}],["transaction",{"_index":535,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["tree",{"_index":212,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["true",{"_index":64,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["tslib",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["tx",{"_index":443,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["tx.objectstore(storename",{"_index":455,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["tx.objectstore(storename).getall",{"_index":510,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["tx.objectstore(storename).index(indexname).opencursor(range",{"_index":500,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["tx.objectstore(storename).put(arg",{"_index":448,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/Ctx.html":{},"classes/Cursor.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollBottomDirective.html":{},"directives/MugenScrollDataDirective.html":{},"directives/MugenScrollTopDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"coverage.html":{}}}],["undefined",{"_index":34,"title":{},"body":{"interfaces/Ctx.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["uniqid",{"_index":239,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["unique",{"_index":388,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["unshift",{"_index":189,"title":{},"body":{"directives/MugenScrollDataDirective.html":{}}}],["unshift(...datas",{"_index":74,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["until",{"_index":70,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["use",{"_index":602,"title":{},"body":{"index.html":{},"license.html":{}}}],["v",{"_index":39,"title":{},"body":{"interfaces/Ctx.html":{},"classes/Cursor.html":{},"interfaces/DataProvider.html":{},"directives/MugenScrollDataDirective.html":{},"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["v.keypath",{"_index":525,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["v.name",{"_index":524,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["v.unique",{"_index":526,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["validate",{"_index":285,"title":{},"body":{"components/NgxMugenScrollComponent.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["validdb",{"_index":414,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["validtx",{"_index":576,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["validtx(db",{"_index":444,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"miscellaneous/functions.html":{}}}],["value",{"_index":545,"title":{},"body":{"injectables/OrderedDataStoreIdxService.html":{}}}],["var",{"_index":351,"title":{},"body":{"components/NgxMugenScrollComponent.html":{}}}],["version",{"_index":423,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{},"index.html":{}}}],["versionchange",{"_index":531,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["viewcontainer",{"_index":42,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["viewcontainerref",{"_index":21,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["void",{"_index":50,"title":{},"body":{"interfaces/Ctx.html":{},"interfaces/CursorStoreInfo.html":{},"injectables/CursorStoreService.html":{},"directives/MugenScrollDataDirective.html":{},"components/NgxMugenScrollComponent.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/ScrollBottomEvent.html":{},"interfaces/ScrollTopEvent.html":{}}}],["vref.context",{"_index":81,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["wait",{"_index":69,"title":{},"body":{"interfaces/Ctx.html":{},"directives/MugenScrollDataDirective.html":{}}}],["warranties",{"_index":652,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":647,"title":{},"body":{"license.html":{}}}],["whether",{"_index":664,"title":{},"body":{"license.html":{}}}],["window.indexeddb",{"_index":399,"title":{},"body":{"classes/NotFoundResourceError.html":{},"injectables/OrderedDataStoreIdxService.html":{},"interfaces/OrderedDataStoreIdxServiceIndex.html":{},"interfaces/OrderedDataStoreIdxServiceStore.html":{}}}],["without",{"_index":621,"title":{},"body":{"license.html":{}}}],["yes",{"_index":589,"title":{},"body":{"miscellaneous/functions.html":{}}}],["zoom",{"_index":367,"title":{},"body":{"modules/NgxMugenScrollModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Ctx.html":{"url":"interfaces/Ctx.html","title":"interface - Ctx","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Ctx\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/mugen-scroll-data.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Directive, ElementRef, EmbeddedViewRef, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Cursor } from './cursor';\n\ninterface Ctx {\n  data: object;\n}\n\n@Directive({\n  selector: '[libMugenScrollData]'\n})\nexport class MugenScrollDataDirective {\n\n  private datasMap: Map;\n  public bottom: object | undefined;\n  public top: object | undefined;\n\n  public max: number;\n  public newCursor: (v: object) => Cursor;\n\n  constructor(\n    private template: TemplateRef,\n    private viewContainer: ViewContainerRef,\n  ) {\n    this.datasMap = new Map();\n    this.max = 100;\n    this.newCursor = (v: object) => new Cursor([v.toString()]);\n  }\n\n  clear(): void {\n    this.viewContainer.clear();\n    this.top = undefined;\n    this.bottom = undefined;\n    this.datasMap.clear();\n  }\n\n  get length(): number {\n    return this.viewContainer.length;\n  }\n\n  push(...datas: Array): void {\n    datas.forEach(data => {\n      const cursor = this.newCursor(data);\n      if (this.datasMap.has(cursor.toString()) === true) {\n        return;\n      }\n      if (this.top === undefined) {\n        this.top = data;\n      }\n      const ctx: Ctx = { data };\n      const r = this.viewContainer.createEmbeddedView(this.template, ctx);\n      r.rootNodes[0].setAttribute('_cursor', this.newCursor(data));\n      r.detectChanges(); // Wait until data is attached???\n      this.datasMap.set(cursor.toString(), data);\n      this.bottom = data;\n    });\n    this.arrange(true);\n  }\n\n  unshift(...datas: Array): void {\n    datas.reverse().forEach(data => {\n      const cursor = this.newCursor(data);\n      if (this.datasMap.has(cursor.toString()) === true) {\n        return;\n      }\n      if (this.bottom === undefined) {\n        this.bottom = data;\n      }\n      const ctx: Ctx = { data };\n      const r = this.viewContainer.createEmbeddedView(this.template, ctx, 0);\n      r.rootNodes[0].setAttribute('_cursor', this.newCursor(data));\n      r.detectChanges(); // Wait until data is attached???\n      this.datasMap.set(cursor.toString(), data);\n      this.top = data;\n    });\n    this.arrange(false);\n  }\n\n  private arrange(deleteAtTop: boolean): void {\n    if (this.viewContainer.length  = ref as EmbeddedViewRef;\n        const ctx = vref.context as Ctx;\n        this.top = ctx.data;\n      }\n      return;\n    }\n    for (let i = 0; i  = ref as EmbeddedViewRef;\n      const ctx = vref.context as Ctx;\n      this.bottom = ctx.data;\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cursor.html":{"url":"classes/Cursor.html","title":"class - Cursor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cursor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cursor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                datas\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getItem\n                            \n                            \n                                getItems\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(datas: Array, delimiter: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/cursor.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        datas\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        delimiter\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            datas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/cursor.ts:2\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItem\n                        \n                        \n                    \n                \n            \n            \n                \ngetItem(i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/cursor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number | string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItems\n                        \n                        \n                    \n                \n            \n            \n                \ngetItems()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/cursor.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/cursor.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/cursor.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class Cursor {\n    private datas: Array;\n    constructor(\n        datas: Array,\n        private delimiter: string = '-',\n    ) {\n        this.datas = datas.map(v => v);\n    }\n    get length(): number { return this.datas.length; }\n    toString(): string {\n        return this.datas.join(this.delimiter);\n    }\n    getItem(i: number): number | string {\n        return this.datas[i];\n    }\n    getItems(): Array {\n        return this.datas.map(v => v);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CursorStoreInfo.html":{"url":"interfaces/CursorStoreInfo.html","title":"interface - CursorStoreInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CursorStoreInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cursor-store.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bottomCursor\n                                \n                                \n                                        n\n                                \n                                \n                                        scrollTop\n                                \n                                \n                                        topCursor\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottomCursor\n                                    \n                                \n                                \n                                    \n                                        bottomCursor:         Cursor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Cursor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        n\n                                    \n                                \n                                \n                                    \n                                        n:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scrollTop\n                                    \n                                \n                                \n                                    \n                                        scrollTop:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        topCursor\n                                    \n                                \n                                \n                                    \n                                        topCursor:         Cursor\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Cursor\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Cursor } from './cursor';\n\nexport interface CursorStoreInfo {\n  bottomCursor: Cursor;\n  topCursor: Cursor;\n  n: number;\n  scrollTop: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CursorStoreService {\n\n  private store: Map;\n\n  constructor() {\n    this.store = new Map();\n  }\n\n  save(p: string, bottomCursor: Cursor, topCursor: Cursor, n: number, scrollTop: number): void {\n    console.log(`Save cursor: ${p}, ${bottomCursor.toString()}, ${topCursor.toString()}, ${n}, ${scrollTop}`);\n    this.store.set(p, { bottomCursor, topCursor, n, scrollTop });\n  }\n\n  load(p: string): CursorStoreInfo | undefined {\n    const i = this.store.get(p);\n    if (!i) {\n      return undefined;\n    }\n    console.log(`Load cursor: ${p}, ${i.bottomCursor.toString()}, ${i.topCursor.toString()}, ${i.n}, ${i.scrollTop}`);\n    return i;\n  }\n\n  delete(p: string): void {\n    this.store.delete(p);\n  }\n\n  get(p: string): CursorStoreInfo | undefined {\n    return this.store.get(p);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CursorStoreService.html":{"url":"injectables/CursorStoreService.html","title":"injectable - CursorStoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CursorStoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/cursor-store.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                load\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/cursor-store.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(p: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/cursor-store.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    p\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(p: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/cursor-store.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    p\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CursorStoreInfo | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            load\n                        \n                        \n                    \n                \n            \n            \n                \nload(p: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/cursor-store.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    p\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CursorStoreInfo | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave(p: string, bottomCursor: Cursor, topCursor: Cursor, n: number, scrollTop: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/cursor-store.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    p\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bottomCursor\n                                    \n                                                Cursor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    topCursor\n                                    \n                                                Cursor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scrollTop\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/cursor-store.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Cursor } from './cursor';\n\nexport interface CursorStoreInfo {\n  bottomCursor: Cursor;\n  topCursor: Cursor;\n  n: number;\n  scrollTop: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CursorStoreService {\n\n  private store: Map;\n\n  constructor() {\n    this.store = new Map();\n  }\n\n  save(p: string, bottomCursor: Cursor, topCursor: Cursor, n: number, scrollTop: number): void {\n    console.log(`Save cursor: ${p}, ${bottomCursor.toString()}, ${topCursor.toString()}, ${n}, ${scrollTop}`);\n    this.store.set(p, { bottomCursor, topCursor, n, scrollTop });\n  }\n\n  load(p: string): CursorStoreInfo | undefined {\n    const i = this.store.get(p);\n    if (!i) {\n      return undefined;\n    }\n    console.log(`Load cursor: ${p}, ${i.bottomCursor.toString()}, ${i.topCursor.toString()}, ${i.n}, ${i.scrollTop}`);\n    return i;\n  }\n\n  delete(p: string): void {\n    this.store.delete(p);\n  }\n\n  get(p: string): CursorStoreInfo | undefined {\n    return this.store.get(p);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataProvider.html":{"url":"interfaces/DataProvider.html","title":"interface - DataProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DataProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/mugen-scroll.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        scrollId\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fetchBottom\n                                \n                                \n                                    fetchOnInit\n                                \n                                \n                                    fetchOnLoad\n                                \n                                \n                                    fetchTop\n                                \n                                \n                                    newCursor\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchBottom\n                        \n                        \n                    \n                \n            \n            \n                \nfetchBottom(cursor: Cursor, n: number, includeEqual: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/mugen-scroll.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cursor\n                                    \n                                                Cursor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    includeEqual\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nfetchOnInit(n: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/mugen-scroll.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchOnLoad\n                        \n                        \n                    \n                \n            \n            \n                \nfetchOnLoad(info: CursorStoreInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/mugen-scroll.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    info\n                                    \n                                                CursorStoreInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchTop\n                        \n                        \n                    \n                \n            \n            \n                \nfetchTop(cursor: Cursor, n: number, includeEqual: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/mugen-scroll.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cursor\n                                    \n                                                Cursor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    includeEqual\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newCursor\n                        \n                        \n                    \n                \n            \n            \n                \nnewCursor(v: T)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/mugen-scroll.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Cursor\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        scrollId\n                                    \n                                \n                                \n                                    \n                                        scrollId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Cursor } from './cursor';\nimport { CursorStoreInfo } from './cursor-store.service';\n\nexport interface DataProvider {\n    scrollId: string;\n    fetchBottom(\n        cursor: Cursor, n: number, includeEqual: boolean): Promise>;\n    fetchTop(\n        cursor: Cursor, n: number, includeEqual: boolean): Promise>;\n    fetchOnLoad(\n        info: CursorStoreInfo): Promise>;\n    fetchOnInit(n: number): Promise>;\n    newCursor(v: T): Cursor;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MugenScrollBottomDirective.html":{"url":"directives/MugenScrollBottomDirective.html","title":"directive - MugenScrollBottomDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MugenScrollBottomDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/mugen-scroll-bottom.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [libMugenScrollBottom]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    element\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/mugen-scroll-bottom.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n\n                \n                    \n                        getelement()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/mugen-scroll-bottom.directive.ts:12\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[libMugenScrollBottom]'\n})\nexport class MugenScrollBottomDirective {\n\n  constructor(\n    private el: ElementRef,\n  ) { }\n\n  get element(): HTMLElement {\n    return this.el.nativeElement;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MugenScrollDataDirective.html":{"url":"directives/MugenScrollDataDirective.html","title":"directive - MugenScrollDataDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MugenScrollDataDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/mugen-scroll-data.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [libMugenScrollData]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bottom\n                            \n                            \n                                    Private\n                                datasMap\n                            \n                            \n                                    Public\n                                max\n                            \n                            \n                                    Public\n                                newCursor\n                            \n                            \n                                    Public\n                                top\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                arrange\n                            \n                            \n                                clear\n                            \n                            \n                                push\n                            \n                            \n                                unshift\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef, viewContainer: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/mugen-scroll-data.directive.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            arrange\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    arrange(deleteAtTop: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/mugen-scroll-data.directive.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deleteAtTop\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/mugen-scroll-data.directive.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            push\n                        \n                        \n                    \n                \n            \n            \n                \npush(...datas: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/mugen-scroll-data.directive.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    datas\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unshift\n                        \n                        \n                    \n                \n            \n            \n                \nunshift(...datas: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/mugen-scroll-data.directive.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    datas\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bottom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/mugen-scroll-data.directive.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            datasMap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/mugen-scroll-data.directive.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            max\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/mugen-scroll-data.directive.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newCursor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/mugen-scroll-data.directive.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            top\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/mugen-scroll-data.directive.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/mugen-scroll-data.directive.ts:36\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, ElementRef, EmbeddedViewRef, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Cursor } from './cursor';\n\ninterface Ctx {\n  data: object;\n}\n\n@Directive({\n  selector: '[libMugenScrollData]'\n})\nexport class MugenScrollDataDirective {\n\n  private datasMap: Map;\n  public bottom: object | undefined;\n  public top: object | undefined;\n\n  public max: number;\n  public newCursor: (v: object) => Cursor;\n\n  constructor(\n    private template: TemplateRef,\n    private viewContainer: ViewContainerRef,\n  ) {\n    this.datasMap = new Map();\n    this.max = 100;\n    this.newCursor = (v: object) => new Cursor([v.toString()]);\n  }\n\n  clear(): void {\n    this.viewContainer.clear();\n    this.top = undefined;\n    this.bottom = undefined;\n    this.datasMap.clear();\n  }\n\n  get length(): number {\n    return this.viewContainer.length;\n  }\n\n  push(...datas: Array): void {\n    datas.forEach(data => {\n      const cursor = this.newCursor(data);\n      if (this.datasMap.has(cursor.toString()) === true) {\n        return;\n      }\n      if (this.top === undefined) {\n        this.top = data;\n      }\n      const ctx: Ctx = { data };\n      const r = this.viewContainer.createEmbeddedView(this.template, ctx);\n      r.rootNodes[0].setAttribute('_cursor', this.newCursor(data));\n      r.detectChanges(); // Wait until data is attached???\n      this.datasMap.set(cursor.toString(), data);\n      this.bottom = data;\n    });\n    this.arrange(true);\n  }\n\n  unshift(...datas: Array): void {\n    datas.reverse().forEach(data => {\n      const cursor = this.newCursor(data);\n      if (this.datasMap.has(cursor.toString()) === true) {\n        return;\n      }\n      if (this.bottom === undefined) {\n        this.bottom = data;\n      }\n      const ctx: Ctx = { data };\n      const r = this.viewContainer.createEmbeddedView(this.template, ctx, 0);\n      r.rootNodes[0].setAttribute('_cursor', this.newCursor(data));\n      r.detectChanges(); // Wait until data is attached???\n      this.datasMap.set(cursor.toString(), data);\n      this.top = data;\n    });\n    this.arrange(false);\n  }\n\n  private arrange(deleteAtTop: boolean): void {\n    if (this.viewContainer.length  = ref as EmbeddedViewRef;\n        const ctx = vref.context as Ctx;\n        this.top = ctx.data;\n      }\n      return;\n    }\n    for (let i = 0; i  = ref as EmbeddedViewRef;\n      const ctx = vref.context as Ctx;\n      this.bottom = ctx.data;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MugenScrollTopDirective.html":{"url":"directives/MugenScrollTopDirective.html","title":"directive - MugenScrollTopDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MugenScrollTopDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/mugen-scroll-top.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [libMugenScrollTop]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    element\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/lib/mugen-scroll-top.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n\n                \n                    \n                        getelement()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/mugen-scroll-top.directive.ts:13\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[libMugenScrollTop]'\n})\nexport class MugenScrollTopDirective {\n\n  constructor(\n    private el: ElementRef,\n  ) {\n  }\n\n  get element(): HTMLElement {\n    return this.el.nativeElement;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NgxMugenScrollComponent.html":{"url":"components/NgxMugenScrollComponent.html","title":"component - NgxMugenScrollComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NgxMugenScrollComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/ngx-mugen-scroll.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-ngx-mugen-scroll\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bottomDirective\n                            \n                            \n                                    Public\n                                dataDirective\n                            \n                            \n                                    Private\n                                intersectionObserver\n                            \n                            \n                                    Public\n                                topDirective\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchBottom\n                            \n                            \n                                    Async\n                                fetchTop\n                            \n                            \n                                init\n                            \n                            \n                                    Async\n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveScrollPosition\n                            \n                            \n                                    Private\n                                scrollBottom\n                            \n                            \n                                    Private\n                                scrollTopAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoFetchingBottom\n                            \n                            \n                                autoFetchingTop\n                            \n                            \n                                autoLoadScrollPosition\n                            \n                            \n                                countPerLoad\n                            \n                            \n                                provider\n                            \n                            \n                                scrollBottomOnInit\n                            \n                            \n                                uniqId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                bottom\n                            \n                            \n                                top\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, cursorStoreService: CursorStoreService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ngx-mugen-scroll.component.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cursorStoreService\n                                                  \n                                                        \n                                                                        CursorStoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoFetchingBottom\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/ngx-mugen-scroll.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoFetchingTop\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/ngx-mugen-scroll.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoLoadScrollPosition\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/ngx-mugen-scroll.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        countPerLoad\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/ngx-mugen-scroll.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        provider\n                    \n                \n                \n                    \n                        Type :         DataProvider | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/ngx-mugen-scroll.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scrollBottomOnInit\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/ngx-mugen-scroll.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uniqId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/ngx-mugen-scroll.component.ts:34\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        bottom\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/ngx-mugen-scroll.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/ngx-mugen-scroll.component.ts:55\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchBottom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchBottom()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-mugen-scroll.component.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchTop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchTop()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-mugen-scroll.component.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-mugen-scroll.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-mugen-scroll.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-mugen-scroll.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveScrollPosition\n                        \n                        \n                    \n                \n            \n            \n                \nsaveScrollPosition()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-mugen-scroll.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            scrollBottom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scrollBottom()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-mugen-scroll.component.ts:258\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            scrollTopAt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scrollTopAt(at: object)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ngx-mugen-scroll.component.ts:224\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    at\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            bottomDirective\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MugenScrollBottomDirective | undefined\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(MugenScrollBottomDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-mugen-scroll.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dataDirective\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MugenScrollDataDirective | undefined\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(MugenScrollDataDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-mugen-scroll.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            intersectionObserver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IntersectionObserver | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-mugen-scroll.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            topDirective\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MugenScrollTopDirective | undefined\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(MugenScrollTopDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ngx-mugen-scroll.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ContentChild, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MugenScrollTopDirective } from './mugen-scroll-top.directive';\nimport { MugenScrollBottomDirective } from './mugen-scroll-bottom.directive';\nimport { DataProvider } from './mugen-scroll';\nimport { CursorStoreService } from './cursor-store.service';\nimport { MugenScrollDataDirective } from './mugen-scroll-data.directive';\n\nexport interface ScrollBottomEvent { }\nexport interface ScrollTopEvent { }\n\n@Component({\n  selector: 'lib-ngx-mugen-scroll',\n  template: `\n    \n  `,\n  styles: [\n  ]\n})\nexport class NgxMugenScrollComponent implements OnInit, AfterViewInit {\n\n  @ContentChild(MugenScrollBottomDirective)\n  public bottomDirective: MugenScrollBottomDirective | undefined;\n\n  @ContentChild(MugenScrollTopDirective)\n  public topDirective: MugenScrollTopDirective | undefined;\n\n  @ContentChild(MugenScrollDataDirective)\n  public dataDirective: MugenScrollDataDirective | undefined;\n\n  @Input()\n  public provider: DataProvider | undefined;\n\n  @Input()\n  public uniqId: string;\n\n  @Input()\n  public scrollBottomOnInit: boolean;\n\n  @Input()\n  public countPerLoad: number;\n\n  @Input()\n  public autoFetchingBottom: boolean;\n\n  @Input()\n  public autoFetchingTop: boolean;\n\n  @Input()\n  public autoLoadScrollPosition: boolean;\n\n  @Output()\n  public bottom: EventEmitter;\n\n  @Output()\n  public top: EventEmitter;\n\n  private intersectionObserver: IntersectionObserver | undefined;\n\n  constructor(\n    private el: ElementRef,\n    private cursorStoreService: CursorStoreService,\n  ) {\n    this.uniqId = '';\n    this.scrollBottomOnInit = false;\n    this.countPerLoad = 50;\n    this.bottom = new EventEmitter();\n    this.top = new EventEmitter();\n    this.autoFetchingBottom = true;\n    this.autoFetchingTop = true;\n    this.autoLoadScrollPosition = true;\n  }\n\n  ngOnInit(): void {\n  }\n\n  async ngAfterViewInit(): Promise {\n    this.init();\n  }\n\n  init(): void {\n    // Validate current state\n    if (this.bottomDirective === undefined) {\n      throw new Error('MugenScrollBottomDirective is undefined in ng-content');\n    }\n    if (this.topDirective === undefined) {\n      throw new Error('MugenScrollTopDirective is undefined in ng-content');\n    }\n    if (this.dataDirective === undefined) {\n      throw new Error('MugenScrollDataDirective is undefined in ng-content');\n    }\n    if (this.provider === undefined) {\n      throw new Error('provider is undefined in ng-content');\n    }\n    // Clear previous state\n    this.dataDirective.clear();\n    this.dataDirective.newCursor = this.provider.newCursor;\n    if (this.intersectionObserver !== undefined) {\n      this.intersectionObserver.disconnect();\n      this.intersectionObserver = undefined;\n    }\n    // New current state\n    this.intersectionObserver = new IntersectionObserver(\n      (entities: Array): void => {\n        entities.forEach(entity => {\n          if (this.bottomDirective === undefined) {\n            throw new Error('MugenScrollBottomDirective is undefined in ng-content');\n          }\n          if (this.topDirective === undefined) {\n            throw new Error('MugenScrollTopDirective is undefined in ng-content');\n          }\n          if (entity.target === this.topDirective.element && entity.isIntersecting === true) {\n            this.top.emit({});\n            if (this.autoFetchingTop === false) {\n              return;\n            }\n            this.fetchTop();\n          }\n          if (entity.target === this.bottomDirective.element && entity.isIntersecting === true) {\n            this.bottom.emit({});\n            if (this.autoFetchingBottom === false) {\n              return;\n            }\n            this.fetchBottom();\n          }\n        });\n      },\n      {\n        root: this.el.nativeElement,\n        rootMargin: '0px',\n        threshold: 1.0,\n      },\n    );\n    this.intersectionObserver.observe(this.bottomDirective.element);\n    this.intersectionObserver.observe(this.topDirective.element);\n    // Load data\n    if (this.autoLoadScrollPosition) {\n      const cursorStoreInfo = this.cursorStoreService.load(this.provider.scrollId);\n      if (cursorStoreInfo !== undefined) {\n        this.provider.fetchOnLoad(cursorStoreInfo).then(datas => {\n          if (this.dataDirective === undefined) {\n            throw new Error('MugenScrollDataDirective is undefined in ng-content');\n          }\n          this.dataDirective.push(...datas);\n          (this.el.nativeElement as HTMLElement).scroll(0, cursorStoreInfo.scrollTop);\n        });\n        return;\n      }\n    }\n    this.provider.fetchOnInit(this.countPerLoad).then(datas => {\n      if (this.dataDirective === undefined) {\n        throw new Error('MugenScrollDataDirective is undefined in ng-content');\n      }\n      this.dataDirective.push(...datas);\n      if (this.scrollBottomOnInit) {\n        this.scrollBottom();\n      }\n    });\n  }\n\n  saveScrollPosition(): void {\n    if (this.provider === undefined) {\n      console.error('provider is undefined in ng-content');\n      return;\n    }\n    if (this.dataDirective === undefined) {\n      console.error('MugenScrollDataDirective is undefined in ng-content');\n      return;\n    }\n    if (this.dataDirective.top === undefined) {\n      console.error('MugenScrollDataDirective.top is undefined in ng-content');\n      return;\n    }\n    if (this.dataDirective.bottom === undefined) {\n      console.error('MugenScrollDataDirective.bottom is undefined in ng-content');\n      return;\n    }\n    this.cursorStoreService.save(\n      this.provider.scrollId,\n      this.provider.newCursor(this.dataDirective.bottom),\n      this.provider.newCursor(this.dataDirective.top),\n      this.countPerLoad,\n      (this.el.nativeElement as HTMLElement).scrollTop,\n    );\n  }\n\n  async fetchBottom(): Promise {\n    if (this.provider === undefined) {\n      throw new Error('provider is undefined in ng-content');\n    }\n    if (this.dataDirective === undefined) {\n      throw new Error('MugenScrollDataDirective is undefined in ng-content');\n    }\n    if (this.dataDirective.bottom === undefined) {\n      return;\n    }\n    const datas = await this.provider.fetchBottom(\n      this.provider.newCursor(this.dataDirective.bottom),\n      this.countPerLoad,\n      false,\n    );\n    this.dataDirective.push(...datas);\n  }\n\n  async fetchTop(): Promise {\n    if (this.provider === undefined) {\n      throw new Error('provider is undefined in ng-content');\n    }\n    if (this.dataDirective === undefined) {\n      throw new Error('MugenScrollDataDirective is undefined in ng-content');\n    }\n    if (this.dataDirective.top === undefined) {\n      return;\n    }\n    const datas = await this.provider.fetchTop(\n      this.provider.newCursor(this.dataDirective.top),\n      this.countPerLoad,\n      false,\n    );\n    const topBeforeAdded = this.dataDirective.top;\n    this.dataDirective.unshift(...datas);\n    this.scrollTopAt(topBeforeAdded);\n  }\n\n  private scrollTopAt(at: object): void {\n    if (this.provider === undefined) {\n      throw new Error('provider is undefined in ng-content');\n    }\n    if (this.dataDirective === undefined) {\n      throw new Error('MugenScrollDataDirective is undefined in ng-content');\n    }\n    if (this.dataDirective.top !== undefined) {\n      if (this.provider.newCursor(this.dataDirective.top).toString() === this.provider.newCursor(at).toString()) {\n        return;\n      }\n    }\n    let s = 0;\n    const cursor = this.provider.newCursor(at);\n    const el = this.el.nativeElement as HTMLElement;\n    for (let i = 0; i \n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'NgxMugenScrollComponent', 'selector': 'lib-ngx-mugen-scroll'}];\n    var DIRECTIVES = [{'name': 'MugenScrollBottomDirective', 'selector': '[libMugenScrollBottom]'},{'name': 'MugenScrollDataDirective', 'selector': '[libMugenScrollData]'},{'name': 'MugenScrollTopDirective', 'selector': '[libMugenScrollTop]'}];\n    var ACTUAL_COMPONENT = {'name': 'NgxMugenScrollComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxMugenScrollModule.html":{"url":"modules/NgxMugenScrollModule.html","title":"module - NgxMugenScrollModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxMugenScrollModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxMugenScrollModule\n\n\n\ncluster_NgxMugenScrollModule_exports\n\n\n\ncluster_NgxMugenScrollModule_declarations\n\n\n\n\nMugenScrollBottomDirective\n\nMugenScrollBottomDirective\n\n\n\nNgxMugenScrollModule\n\nNgxMugenScrollModule\n\nNgxMugenScrollModule -->\n\nMugenScrollBottomDirective->NgxMugenScrollModule\n\n\n\n\n\nMugenScrollDataDirective\n\nMugenScrollDataDirective\n\nNgxMugenScrollModule -->\n\nMugenScrollDataDirective->NgxMugenScrollModule\n\n\n\n\n\nMugenScrollTopDirective\n\nMugenScrollTopDirective\n\nNgxMugenScrollModule -->\n\nMugenScrollTopDirective->NgxMugenScrollModule\n\n\n\n\n\nNgxMugenScrollComponent\n\nNgxMugenScrollComponent\n\nNgxMugenScrollModule -->\n\nNgxMugenScrollComponent->NgxMugenScrollModule\n\n\n\n\n\nMugenScrollBottomDirective \n\nMugenScrollBottomDirective \n\nMugenScrollBottomDirective  -->\n\nNgxMugenScrollModule->MugenScrollBottomDirective \n\n\n\n\n\nMugenScrollDataDirective \n\nMugenScrollDataDirective \n\nMugenScrollDataDirective  -->\n\nNgxMugenScrollModule->MugenScrollDataDirective \n\n\n\n\n\nMugenScrollTopDirective \n\nMugenScrollTopDirective \n\nMugenScrollTopDirective  -->\n\nNgxMugenScrollModule->MugenScrollTopDirective \n\n\n\n\n\nNgxMugenScrollComponent \n\nNgxMugenScrollComponent \n\nNgxMugenScrollComponent  -->\n\nNgxMugenScrollModule->NgxMugenScrollComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/ngx-mugen-scroll.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MugenScrollBottomDirective\n                        \n                        \n                            MugenScrollDataDirective\n                        \n                        \n                            MugenScrollTopDirective\n                        \n                        \n                            NgxMugenScrollComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MugenScrollBottomDirective\n                        \n                        \n                            MugenScrollDataDirective\n                        \n                        \n                            MugenScrollTopDirective\n                        \n                        \n                            NgxMugenScrollComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxMugenScrollComponent } from './ngx-mugen-scroll.component';\nimport { MugenScrollTopDirective } from './mugen-scroll-top.directive';\nimport { MugenScrollBottomDirective } from './mugen-scroll-bottom.directive';\nimport { MugenScrollDataDirective } from './mugen-scroll-data.directive';\n\n\n\n@NgModule({\n  declarations: [\n    NgxMugenScrollComponent,\n    MugenScrollTopDirective,\n    MugenScrollBottomDirective,\n    MugenScrollDataDirective,\n  ],\n  imports: [\n  ],\n  exports: [\n    NgxMugenScrollComponent,\n    MugenScrollTopDirective,\n    MugenScrollBottomDirective,\n    MugenScrollDataDirective,\n  ],\n})\nexport class NgxMugenScrollModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundResourceError.html":{"url":"classes/NotFoundResourceError.html","title":"class - NotFoundResourceError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundResourceError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ordered-data-store-idx.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Error\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/lib/ordered-data-store-idx.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ordered-data-store-idx.service.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ordered-data-store-idx.service.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Cursor } from './cursor';\n\n\nexport class NotFoundResourceError implements Error {\n  readonly name: string;\n  constructor(public message: string) {\n    this.name = this.constructor.name;\n  }\n}\n\nexport interface OrderedDataStoreIdxServiceIndex {\n  name: string;\n  keyPath: string | Array;\n  unique: boolean;\n}\n\nexport interface OrderedDataStoreIdxServiceStore {\n  name: string;\n  keyPath: string | Array;\n  indices: Array;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderedDataStoreIdxService {\n\n  private indexedDB: IDBFactory;\n  private db: IDBDatabase | undefined;\n  private dbName: string;\n\n  constructor(\n  ) {\n    this.dbName = 'ngx-mugen-scroll-store';\n    this.indexedDB = window.indexedDB;\n  }\n\n  static async fetch(\n    base: OrderedDataStoreIdxService,\n    store: OrderedDataStoreIdxServiceStore,\n    key: string,\n    index: string,\n    fetcher: () => Promise,\n  ): Promise {\n    let data = await base.get(\n      store.name,\n      key,\n      index,\n    );\n    if (data) {\n      console.log(`Fetch ${store.name}.${index}.${key} from indexed db`);\n      return data;\n    }\n    data = await fetcher();\n    if (!data) {\n      throw new NotFoundResourceError(`Cannot find '${key}'`);\n    }\n    console.log(`Fetch ${store.name}.${index}.${key} from remote`);\n    await base.add(\n      store.name,\n      data,\n    );\n    return data;\n  }\n\n  private validDB(): IDBDatabase {\n    if (!this.db) {\n      throw new Error('db is undefined');\n    }\n    return this.db;\n  }\n\n\n  async init(version: number, stores: Array): Promise {\n    return new Promise((resolve, reject) => {\n      const request = this.indexedDB.open(this.dbName, version);\n      request.onsuccess = (ev: Event) => {\n        this.db = (ev.target as any).result as IDBDatabase;\n        resolve();\n      };\n      request.onupgradeneeded = async (ev: Event) => {\n        this.db = (ev.target as any).result as IDBDatabase;\n        const db = this.db;\n        const resultsInitStore: Array> = [];\n        stores.forEach(async store => {\n          resultsInitStore.push(initStore(db, store.name, store.keyPath, store.indices));\n        });\n        for (const result of resultsInitStore) {\n          await result;\n        }\n        resolve();\n      };\n      request.onblocked = (ev: Event) => {\n        console.error(ev);\n        reject(ev);\n      };\n      request.onerror = (ev: Event) => {\n        console.error(ev);\n        reject(ev);\n      };\n    });\n  }\n\n  async add(storeName: string, ...args: Array): Promise {\n    const db = this.validDB();\n    const tx = validTx(db, storeName, 'readwrite');\n    args.forEach((arg: T) => {\n      tx.objectStore(storeName).put(arg);\n    });\n  }\n\n  async get(\n    storeName: string,\n    query: string | number | Date | ArrayBufferView | ArrayBuffer | IDBArrayKey | IDBKeyRange,\n    index: string = '',\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      const db = this.validDB();\n      const tx = validTx(db, storeName, 'readonly');\n      const store = tx.objectStore(storeName);\n      let idx = null;\n      if (index) {\n        idx = store.index(index);\n      } else {\n        idx = store;\n      }\n      const r = idx.get(query);\n      r.onsuccess = (ev: Event) => {\n        resolve(r.result);\n      };\n      r.onerror = (ev: Event) => {\n        reject(r.error);\n      };\n    });\n  }\n\n  async delete(\n    storeName: string,\n    key: string | number | Date | ArrayBufferView | ArrayBuffer | IDBArrayKey | IDBKeyRange,\n    index: string = '',\n  ): Promise {\n    const db = this.validDB();\n    const tx = validTx(db, storeName, 'readwrite');\n    const store = tx.objectStore(storeName);\n    if (!index) {\n      return new Promise((resolve, reject) => {\n        const r = store.delete(key);\n        r.onsuccess = (ev: Event) => {\n          resolve();\n        };\n        r.onerror = (ev: Event) => {\n          reject();\n        };\n      });\n    }\n    const idx = store.index(index);\n    const key2 = idx.getKey(key);\n    if (!key2) {\n      return;\n    }\n    return new Promise((resolve, reject) => {\n      key2.onsuccess = (ev: Event) => {\n        const target = ev.target as any;\n        this.delete(storeName, target.result, '').then(resolve).catch(reject);\n      };\n      key2.onerror = (ev: Event) => { reject(ev); };\n    });\n  }\n\n  async clear(storeName: string): Promise {\n    const db = this.validDB();\n    const tx = validTx(db, storeName, 'readwrite');\n    const store = tx.objectStore(storeName);\n    const r = store.clear();\n    return new Promise((resolve, reject) => {\n      r.onsuccess = (ev: Event) => {\n        resolve();\n      };\n      r.onerror = (ev: Event) => {\n        reject();\n      };\n    });\n  }\n\n  async clearAll(): Promise {\n    const db = this.validDB();\n    const objectStoreNames = db.objectStoreNames;\n    for (let i = 0; i (\n    storeName: string,\n    indexName: string,\n    current: Cursor,\n    n: number,\n    includeEqual: boolean = false,\n    end: Cursor | null = null,\n  ): Promise> {\n    let range = IDBKeyRange.lowerBound(current.getItems(), !includeEqual);\n    if (end) {\n      range = IDBKeyRange.bound(\n        current.getItems(),\n        end.getItems(),\n        !includeEqual,\n        true,\n      );\n    }\n    return await this.iter(\n      storeName,\n      indexName,\n      current.getItems(),\n      range,\n      'next',\n      n,\n    );\n  }\n\n  async getSmallerN(\n    storeName: string,\n    indexName: string,\n    current: Cursor,\n    n: number,\n    includeEqual: boolean = false,\n    end: Cursor | null = null,\n  ): Promise> {\n    let range = IDBKeyRange.upperBound(current.getItems(), !includeEqual);\n    if (end) {\n      range = IDBKeyRange.bound(\n        end.getItems(),\n        current.getItems(),\n        true,\n        !includeEqual,\n      );\n    }\n    return await this.iter(\n      storeName,\n      indexName,\n      current.getItems(),\n      range,\n      'prev',\n      n,\n    );\n  }\n\n  private async iter(\n    storeName: string,\n    indexName: string,\n    current: Array,\n    range: IDBKeyRange,\n    direction: 'next' | 'prev',\n    n: number,\n  ): Promise> {\n    // console.log(`Fetch ${storeName}.${indexName} at ${current.toString()}`);\n    // console.log(`From ${range.lower} to ${range.upper} sort ${direction} ${n} from indexed db`);\n    const ret: Array = [];\n    return new Promise>((resolve, reject) => {\n      const db = this.validDB();\n      const tx = validTx(db, storeName, 'readonly');\n      let i = 0;\n      const r = tx.objectStore(storeName).index(indexName).openCursor(range, direction);\n      r.onsuccess = (ev: Event) => {\n        const cursor: IDBCursorWithValue = (ev.target as any).result;\n        if (!cursor) {\n          // EOF\n          resolve(ret);\n          return;\n        }\n        if (i >= n) {\n          resolve(ret);\n          return;\n        }\n        if (direction === 'next') {\n          ret.push(cursor.value);\n        } else {\n          ret.unshift(cursor.value);\n        }\n        cursor.continue();\n        i++;\n      };\n      r.onerror = (ev: Event) => {\n        reject(ev);\n      };\n    });\n  }\n\n  public async filter(\n    storeName: string,\n    direction: 'next' | 'prev',\n    cb: (v: T, i: number) => boolean,\n  ): Promise> {\n    console.log(`Filter ${storeName} from indexed db`);\n    const ret: Array = [];\n    return new Promise>((resolve, reject) => {\n      const db = this.validDB();\n      const tx = validTx(db, storeName, 'readonly');\n      const r = tx.objectStore(storeName).getAll();\n      let i = 0;\n      r.onsuccess = (ev: Event) => {\n        const r2 = ev.target as IDBRequest;\n        (r2.result as Array).forEach((v: T) => {\n          if (cb(v, i)) {\n            if (direction === 'next') {\n              ret.push(v);\n            } else {\n              ret.unshift(v);\n            }\n          }\n        });\n        i++;\n        resolve(ret);\n      };\n      r.onerror = (ev: Event) => {\n        reject(ev);\n      };\n    });\n  }\n}\n\nasync function initStore(\n  db: IDBDatabase,\n  storeName: string,\n  keyPath: string | Array,\n  indecies: Array = [],\n): Promise {\n  return new Promise((resolve, reject) => {\n    if (db.objectStoreNames.contains(storeName)) {\n      return resolve();\n    }\n    const store = db.createObjectStore(\n      storeName,\n      {\n        keyPath,\n      },\n    );\n    indecies.forEach(v => {\n      store.createIndex(\n        v.name,\n        v.keyPath,\n        {\n          unique: v.unique,\n        },\n      );\n    });\n    store.transaction.oncomplete = (ev: Event) => {\n      resolve();\n    };\n    store.transaction.onabort = (ev: Event) => {\n      reject(ev);\n    };\n    store.transaction.onerror = (ev: Event) => {\n      reject(ev);\n    };\n  });\n\n}\n\n\nfunction validTx(db: IDBDatabase, storeName: string, mode?: 'readonly' | 'readwrite' | 'versionchange' | undefined): IDBTransaction {\n  const tx = db.transaction(storeName, mode);\n  if (!tx) {\n    throw new Error(`Cannot get transaction '${storeName}'`);\n  }\n  return tx;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderedDataStoreIdxService.html":{"url":"injectables/OrderedDataStoreIdxService.html","title":"injectable - OrderedDataStoreIdxService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrderedDataStoreIdxService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ordered-data-store-idx.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                            \n                                    Private\n                                dbName\n                            \n                            \n                                    Private\n                                indexedDB\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                add\n                            \n                            \n                                    Async\n                                clear\n                            \n                            \n                                    Async\n                                clearAll\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Static\n                                    Async\n                                fetch\n                            \n                            \n                                    Public\n                                    Async\n                                filter\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getLargerN\n                            \n                            \n                                    Async\n                                getSmallerN\n                            \n                            \n                                    Async\n                                init\n                            \n                            \n                                    Private\n                                    Async\n                                iter\n                            \n                            \n                                    Private\n                                validDB\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/lib/ordered-data-store-idx.service.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(storeName: string, ...args: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ordered-data-store-idx.service.ts:105\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storeName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear(storeName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ordered-data-store-idx.service.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storeName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            clearAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearAll()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ordered-data-store-idx.service.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(storeName: string, key: string | number | Date | ArrayBufferView | ArrayBuffer | IDBArrayKey | IDBKeyRange, index: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ordered-data-store-idx.service.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    storeName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    key\n                                    \n                                            string | number | Date | ArrayBufferView | ArrayBuffer | IDBArrayKey | IDBKeyRange\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    index\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            fetch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetch(base: OrderedDataStoreIdxService, store: OrderedDataStoreIdxServiceStore, key: string, index: string, fetcher: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ordered-data-store-idx.service.ts:39\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    base\n                                    \n                                                OrderedDataStoreIdxService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    store\n                                    \n                                                OrderedDataStoreIdxServiceStore\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fetcher\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filter(storeName: string, direction: \"next\" | \"prev\", cb: (v: T,i: number) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ordered-data-store-idx.service.ts:293\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storeName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    direction\n                                    \n                                            \"next\" | \"prev\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cb\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(storeName: string, query: string | number | Date | ArrayBufferView | ArrayBuffer | IDBArrayKey | IDBKeyRange, index: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ordered-data-store-idx.service.ts:113\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    storeName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    query\n                                    \n                                            string | number | Date | ArrayBufferView | ArrayBuffer | IDBArrayKey | IDBKeyRange\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    index\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getLargerN\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLargerN(storeName: string, indexName: string, current: Cursor, n: number, includeEqual: boolean, end: Cursor | null)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ordered-data-store-idx.service.ts:198\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    storeName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    indexName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    current\n                                    \n                                                Cursor\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    includeEqual\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                                \n                                    end\n                                    \n                                                Cursor | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSmallerN\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSmallerN(storeName: string, indexName: string, current: Cursor, n: number, includeEqual: boolean, end: Cursor | null)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ordered-data-store-idx.service.ts:225\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    storeName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    indexName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    current\n                                    \n                                                Cursor\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    includeEqual\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                                \n                                    end\n                                    \n                                                Cursor | null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init(version: number, stores: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ordered-data-store-idx.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    version\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    stores\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            iter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    iter(storeName: string, indexName: string, current: Array, range: IDBKeyRange, direction: \"next\" | \"prev\", n: number)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ordered-data-store-idx.service.ts:252\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storeName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    indexName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    current\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    range\n                                    \n                                            IDBKeyRange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    direction\n                                    \n                                            \"next\" | \"prev\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    n\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validDB\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validDB()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/ordered-data-store-idx.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     IDBDatabase\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            db\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IDBDatabase | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ordered-data-store-idx.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dbName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ordered-data-store-idx.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            indexedDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     IDBFactory\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/ordered-data-store-idx.service.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Cursor } from './cursor';\n\n\nexport class NotFoundResourceError implements Error {\n  readonly name: string;\n  constructor(public message: string) {\n    this.name = this.constructor.name;\n  }\n}\n\nexport interface OrderedDataStoreIdxServiceIndex {\n  name: string;\n  keyPath: string | Array;\n  unique: boolean;\n}\n\nexport interface OrderedDataStoreIdxServiceStore {\n  name: string;\n  keyPath: string | Array;\n  indices: Array;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderedDataStoreIdxService {\n\n  private indexedDB: IDBFactory;\n  private db: IDBDatabase | undefined;\n  private dbName: string;\n\n  constructor(\n  ) {\n    this.dbName = 'ngx-mugen-scroll-store';\n    this.indexedDB = window.indexedDB;\n  }\n\n  static async fetch(\n    base: OrderedDataStoreIdxService,\n    store: OrderedDataStoreIdxServiceStore,\n    key: string,\n    index: string,\n    fetcher: () => Promise,\n  ): Promise {\n    let data = await base.get(\n      store.name,\n      key,\n      index,\n    );\n    if (data) {\n      console.log(`Fetch ${store.name}.${index}.${key} from indexed db`);\n      return data;\n    }\n    data = await fetcher();\n    if (!data) {\n      throw new NotFoundResourceError(`Cannot find '${key}'`);\n    }\n    console.log(`Fetch ${store.name}.${index}.${key} from remote`);\n    await base.add(\n      store.name,\n      data,\n    );\n    return data;\n  }\n\n  private validDB(): IDBDatabase {\n    if (!this.db) {\n      throw new Error('db is undefined');\n    }\n    return this.db;\n  }\n\n\n  async init(version: number, stores: Array): Promise {\n    return new Promise((resolve, reject) => {\n      const request = this.indexedDB.open(this.dbName, version);\n      request.onsuccess = (ev: Event) => {\n        this.db = (ev.target as any).result as IDBDatabase;\n        resolve();\n      };\n      request.onupgradeneeded = async (ev: Event) => {\n        this.db = (ev.target as any).result as IDBDatabase;\n        const db = this.db;\n        const resultsInitStore: Array> = [];\n        stores.forEach(async store => {\n          resultsInitStore.push(initStore(db, store.name, store.keyPath, store.indices));\n        });\n        for (const result of resultsInitStore) {\n          await result;\n        }\n        resolve();\n      };\n      request.onblocked = (ev: Event) => {\n        console.error(ev);\n        reject(ev);\n      };\n      request.onerror = (ev: Event) => {\n        console.error(ev);\n        reject(ev);\n      };\n    });\n  }\n\n  async add(storeName: string, ...args: Array): Promise {\n    const db = this.validDB();\n    const tx = validTx(db, storeName, 'readwrite');\n    args.forEach((arg: T) => {\n      tx.objectStore(storeName).put(arg);\n    });\n  }\n\n  async get(\n    storeName: string,\n    query: string | number | Date | ArrayBufferView | ArrayBuffer | IDBArrayKey | IDBKeyRange,\n    index: string = '',\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      const db = this.validDB();\n      const tx = validTx(db, storeName, 'readonly');\n      const store = tx.objectStore(storeName);\n      let idx = null;\n      if (index) {\n        idx = store.index(index);\n      } else {\n        idx = store;\n      }\n      const r = idx.get(query);\n      r.onsuccess = (ev: Event) => {\n        resolve(r.result);\n      };\n      r.onerror = (ev: Event) => {\n        reject(r.error);\n      };\n    });\n  }\n\n  async delete(\n    storeName: string,\n    key: string | number | Date | ArrayBufferView | ArrayBuffer | IDBArrayKey | IDBKeyRange,\n    index: string = '',\n  ): Promise {\n    const db = this.validDB();\n    const tx = validTx(db, storeName, 'readwrite');\n    const store = tx.objectStore(storeName);\n    if (!index) {\n      return new Promise((resolve, reject) => {\n        const r = store.delete(key);\n        r.onsuccess = (ev: Event) => {\n          resolve();\n        };\n        r.onerror = (ev: Event) => {\n          reject();\n        };\n      });\n    }\n    const idx = store.index(index);\n    const key2 = idx.getKey(key);\n    if (!key2) {\n      return;\n    }\n    return new Promise((resolve, reject) => {\n      key2.onsuccess = (ev: Event) => {\n        const target = ev.target as any;\n        this.delete(storeName, target.result, '').then(resolve).catch(reject);\n      };\n      key2.onerror = (ev: Event) => { reject(ev); };\n    });\n  }\n\n  async clear(storeName: string): Promise {\n    const db = this.validDB();\n    const tx = validTx(db, storeName, 'readwrite');\n    const store = tx.objectStore(storeName);\n    const r = store.clear();\n    return new Promise((resolve, reject) => {\n      r.onsuccess = (ev: Event) => {\n        resolve();\n      };\n      r.onerror = (ev: Event) => {\n        reject();\n      };\n    });\n  }\n\n  async clearAll(): Promise {\n    const db = this.validDB();\n    const objectStoreNames = db.objectStoreNames;\n    for (let i = 0; i (\n    storeName: string,\n    indexName: string,\n    current: Cursor,\n    n: number,\n    includeEqual: boolean = false,\n    end: Cursor | null = null,\n  ): Promise> {\n    let range = IDBKeyRange.lowerBound(current.getItems(), !includeEqual);\n    if (end) {\n      range = IDBKeyRange.bound(\n        current.getItems(),\n        end.getItems(),\n        !includeEqual,\n        true,\n      );\n    }\n    return await this.iter(\n      storeName,\n      indexName,\n      current.getItems(),\n      range,\n      'next',\n      n,\n    );\n  }\n\n  async getSmallerN(\n    storeName: string,\n    indexName: string,\n    current: Cursor,\n    n: number,\n    includeEqual: boolean = false,\n    end: Cursor | null = null,\n  ): Promise> {\n    let range = IDBKeyRange.upperBound(current.getItems(), !includeEqual);\n    if (end) {\n      range = IDBKeyRange.bound(\n        end.getItems(),\n        current.getItems(),\n        true,\n        !includeEqual,\n      );\n    }\n    return await this.iter(\n      storeName,\n      indexName,\n      current.getItems(),\n      range,\n      'prev',\n      n,\n    );\n  }\n\n  private async iter(\n    storeName: string,\n    indexName: string,\n    current: Array,\n    range: IDBKeyRange,\n    direction: 'next' | 'prev',\n    n: number,\n  ): Promise> {\n    // console.log(`Fetch ${storeName}.${indexName} at ${current.toString()}`);\n    // console.log(`From ${range.lower} to ${range.upper} sort ${direction} ${n} from indexed db`);\n    const ret: Array = [];\n    return new Promise>((resolve, reject) => {\n      const db = this.validDB();\n      const tx = validTx(db, storeName, 'readonly');\n      let i = 0;\n      const r = tx.objectStore(storeName).index(indexName).openCursor(range, direction);\n      r.onsuccess = (ev: Event) => {\n        const cursor: IDBCursorWithValue = (ev.target as any).result;\n        if (!cursor) {\n          // EOF\n          resolve(ret);\n          return;\n        }\n        if (i >= n) {\n          resolve(ret);\n          return;\n        }\n        if (direction === 'next') {\n          ret.push(cursor.value);\n        } else {\n          ret.unshift(cursor.value);\n        }\n        cursor.continue();\n        i++;\n      };\n      r.onerror = (ev: Event) => {\n        reject(ev);\n      };\n    });\n  }\n\n  public async filter(\n    storeName: string,\n    direction: 'next' | 'prev',\n    cb: (v: T, i: number) => boolean,\n  ): Promise> {\n    console.log(`Filter ${storeName} from indexed db`);\n    const ret: Array = [];\n    return new Promise>((resolve, reject) => {\n      const db = this.validDB();\n      const tx = validTx(db, storeName, 'readonly');\n      const r = tx.objectStore(storeName).getAll();\n      let i = 0;\n      r.onsuccess = (ev: Event) => {\n        const r2 = ev.target as IDBRequest;\n        (r2.result as Array).forEach((v: T) => {\n          if (cb(v, i)) {\n            if (direction === 'next') {\n              ret.push(v);\n            } else {\n              ret.unshift(v);\n            }\n          }\n        });\n        i++;\n        resolve(ret);\n      };\n      r.onerror = (ev: Event) => {\n        reject(ev);\n      };\n    });\n  }\n}\n\nasync function initStore(\n  db: IDBDatabase,\n  storeName: string,\n  keyPath: string | Array,\n  indecies: Array = [],\n): Promise {\n  return new Promise((resolve, reject) => {\n    if (db.objectStoreNames.contains(storeName)) {\n      return resolve();\n    }\n    const store = db.createObjectStore(\n      storeName,\n      {\n        keyPath,\n      },\n    );\n    indecies.forEach(v => {\n      store.createIndex(\n        v.name,\n        v.keyPath,\n        {\n          unique: v.unique,\n        },\n      );\n    });\n    store.transaction.oncomplete = (ev: Event) => {\n      resolve();\n    };\n    store.transaction.onabort = (ev: Event) => {\n      reject(ev);\n    };\n    store.transaction.onerror = (ev: Event) => {\n      reject(ev);\n    };\n  });\n\n}\n\n\nfunction validTx(db: IDBDatabase, storeName: string, mode?: 'readonly' | 'readwrite' | 'versionchange' | undefined): IDBTransaction {\n  const tx = db.transaction(storeName, mode);\n  if (!tx) {\n    throw new Error(`Cannot get transaction '${storeName}'`);\n  }\n  return tx;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderedDataStoreIdxServiceIndex.html":{"url":"interfaces/OrderedDataStoreIdxServiceIndex.html","title":"interface - OrderedDataStoreIdxServiceIndex","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OrderedDataStoreIdxServiceIndex\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ordered-data-store-idx.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        keyPath\n                                \n                                \n                                        name\n                                \n                                \n                                        unique\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        keyPath\n                                    \n                                \n                                \n                                    \n                                        keyPath:     string | Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unique\n                                    \n                                \n                                \n                                    \n                                        unique:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Cursor } from './cursor';\n\n\nexport class NotFoundResourceError implements Error {\n  readonly name: string;\n  constructor(public message: string) {\n    this.name = this.constructor.name;\n  }\n}\n\nexport interface OrderedDataStoreIdxServiceIndex {\n  name: string;\n  keyPath: string | Array;\n  unique: boolean;\n}\n\nexport interface OrderedDataStoreIdxServiceStore {\n  name: string;\n  keyPath: string | Array;\n  indices: Array;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderedDataStoreIdxService {\n\n  private indexedDB: IDBFactory;\n  private db: IDBDatabase | undefined;\n  private dbName: string;\n\n  constructor(\n  ) {\n    this.dbName = 'ngx-mugen-scroll-store';\n    this.indexedDB = window.indexedDB;\n  }\n\n  static async fetch(\n    base: OrderedDataStoreIdxService,\n    store: OrderedDataStoreIdxServiceStore,\n    key: string,\n    index: string,\n    fetcher: () => Promise,\n  ): Promise {\n    let data = await base.get(\n      store.name,\n      key,\n      index,\n    );\n    if (data) {\n      console.log(`Fetch ${store.name}.${index}.${key} from indexed db`);\n      return data;\n    }\n    data = await fetcher();\n    if (!data) {\n      throw new NotFoundResourceError(`Cannot find '${key}'`);\n    }\n    console.log(`Fetch ${store.name}.${index}.${key} from remote`);\n    await base.add(\n      store.name,\n      data,\n    );\n    return data;\n  }\n\n  private validDB(): IDBDatabase {\n    if (!this.db) {\n      throw new Error('db is undefined');\n    }\n    return this.db;\n  }\n\n\n  async init(version: number, stores: Array): Promise {\n    return new Promise((resolve, reject) => {\n      const request = this.indexedDB.open(this.dbName, version);\n      request.onsuccess = (ev: Event) => {\n        this.db = (ev.target as any).result as IDBDatabase;\n        resolve();\n      };\n      request.onupgradeneeded = async (ev: Event) => {\n        this.db = (ev.target as any).result as IDBDatabase;\n        const db = this.db;\n        const resultsInitStore: Array> = [];\n        stores.forEach(async store => {\n          resultsInitStore.push(initStore(db, store.name, store.keyPath, store.indices));\n        });\n        for (const result of resultsInitStore) {\n          await result;\n        }\n        resolve();\n      };\n      request.onblocked = (ev: Event) => {\n        console.error(ev);\n        reject(ev);\n      };\n      request.onerror = (ev: Event) => {\n        console.error(ev);\n        reject(ev);\n      };\n    });\n  }\n\n  async add(storeName: string, ...args: Array): Promise {\n    const db = this.validDB();\n    const tx = validTx(db, storeName, 'readwrite');\n    args.forEach((arg: T) => {\n      tx.objectStore(storeName).put(arg);\n    });\n  }\n\n  async get(\n    storeName: string,\n    query: string | number | Date | ArrayBufferView | ArrayBuffer | IDBArrayKey | IDBKeyRange,\n    index: string = '',\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      const db = this.validDB();\n      const tx = validTx(db, storeName, 'readonly');\n      const store = tx.objectStore(storeName);\n      let idx = null;\n      if (index) {\n        idx = store.index(index);\n      } else {\n        idx = store;\n      }\n      const r = idx.get(query);\n      r.onsuccess = (ev: Event) => {\n        resolve(r.result);\n      };\n      r.onerror = (ev: Event) => {\n        reject(r.error);\n      };\n    });\n  }\n\n  async delete(\n    storeName: string,\n    key: string | number | Date | ArrayBufferView | ArrayBuffer | IDBArrayKey | IDBKeyRange,\n    index: string = '',\n  ): Promise {\n    const db = this.validDB();\n    const tx = validTx(db, storeName, 'readwrite');\n    const store = tx.objectStore(storeName);\n    if (!index) {\n      return new Promise((resolve, reject) => {\n        const r = store.delete(key);\n        r.onsuccess = (ev: Event) => {\n          resolve();\n        };\n        r.onerror = (ev: Event) => {\n          reject();\n        };\n      });\n    }\n    const idx = store.index(index);\n    const key2 = idx.getKey(key);\n    if (!key2) {\n      return;\n    }\n    return new Promise((resolve, reject) => {\n      key2.onsuccess = (ev: Event) => {\n        const target = ev.target as any;\n        this.delete(storeName, target.result, '').then(resolve).catch(reject);\n      };\n      key2.onerror = (ev: Event) => { reject(ev); };\n    });\n  }\n\n  async clear(storeName: string): Promise {\n    const db = this.validDB();\n    const tx = validTx(db, storeName, 'readwrite');\n    const store = tx.objectStore(storeName);\n    const r = store.clear();\n    return new Promise((resolve, reject) => {\n      r.onsuccess = (ev: Event) => {\n        resolve();\n      };\n      r.onerror = (ev: Event) => {\n        reject();\n      };\n    });\n  }\n\n  async clearAll(): Promise {\n    const db = this.validDB();\n    const objectStoreNames = db.objectStoreNames;\n    for (let i = 0; i (\n    storeName: string,\n    indexName: string,\n    current: Cursor,\n    n: number,\n    includeEqual: boolean = false,\n    end: Cursor | null = null,\n  ): Promise> {\n    let range = IDBKeyRange.lowerBound(current.getItems(), !includeEqual);\n    if (end) {\n      range = IDBKeyRange.bound(\n        current.getItems(),\n        end.getItems(),\n        !includeEqual,\n        true,\n      );\n    }\n    return await this.iter(\n      storeName,\n      indexName,\n      current.getItems(),\n      range,\n      'next',\n      n,\n    );\n  }\n\n  async getSmallerN(\n    storeName: string,\n    indexName: string,\n    current: Cursor,\n    n: number,\n    includeEqual: boolean = false,\n    end: Cursor | null = null,\n  ): Promise> {\n    let range = IDBKeyRange.upperBound(current.getItems(), !includeEqual);\n    if (end) {\n      range = IDBKeyRange.bound(\n        end.getItems(),\n        current.getItems(),\n        true,\n        !includeEqual,\n      );\n    }\n    return await this.iter(\n      storeName,\n      indexName,\n      current.getItems(),\n      range,\n      'prev',\n      n,\n    );\n  }\n\n  private async iter(\n    storeName: string,\n    indexName: string,\n    current: Array,\n    range: IDBKeyRange,\n    direction: 'next' | 'prev',\n    n: number,\n  ): Promise> {\n    // console.log(`Fetch ${storeName}.${indexName} at ${current.toString()}`);\n    // console.log(`From ${range.lower} to ${range.upper} sort ${direction} ${n} from indexed db`);\n    const ret: Array = [];\n    return new Promise>((resolve, reject) => {\n      const db = this.validDB();\n      const tx = validTx(db, storeName, 'readonly');\n      let i = 0;\n      const r = tx.objectStore(storeName).index(indexName).openCursor(range, direction);\n      r.onsuccess = (ev: Event) => {\n        const cursor: IDBCursorWithValue = (ev.target as any).result;\n        if (!cursor) {\n          // EOF\n          resolve(ret);\n          return;\n        }\n        if (i >= n) {\n          resolve(ret);\n          return;\n        }\n        if (direction === 'next') {\n          ret.push(cursor.value);\n        } else {\n          ret.unshift(cursor.value);\n        }\n        cursor.continue();\n        i++;\n      };\n      r.onerror = (ev: Event) => {\n        reject(ev);\n      };\n    });\n  }\n\n  public async filter(\n    storeName: string,\n    direction: 'next' | 'prev',\n    cb: (v: T, i: number) => boolean,\n  ): Promise> {\n    console.log(`Filter ${storeName} from indexed db`);\n    const ret: Array = [];\n    return new Promise>((resolve, reject) => {\n      const db = this.validDB();\n      const tx = validTx(db, storeName, 'readonly');\n      const r = tx.objectStore(storeName).getAll();\n      let i = 0;\n      r.onsuccess = (ev: Event) => {\n        const r2 = ev.target as IDBRequest;\n        (r2.result as Array).forEach((v: T) => {\n          if (cb(v, i)) {\n            if (direction === 'next') {\n              ret.push(v);\n            } else {\n              ret.unshift(v);\n            }\n          }\n        });\n        i++;\n        resolve(ret);\n      };\n      r.onerror = (ev: Event) => {\n        reject(ev);\n      };\n    });\n  }\n}\n\nasync function initStore(\n  db: IDBDatabase,\n  storeName: string,\n  keyPath: string | Array,\n  indecies: Array = [],\n): Promise {\n  return new Promise((resolve, reject) => {\n    if (db.objectStoreNames.contains(storeName)) {\n      return resolve();\n    }\n    const store = db.createObjectStore(\n      storeName,\n      {\n        keyPath,\n      },\n    );\n    indecies.forEach(v => {\n      store.createIndex(\n        v.name,\n        v.keyPath,\n        {\n          unique: v.unique,\n        },\n      );\n    });\n    store.transaction.oncomplete = (ev: Event) => {\n      resolve();\n    };\n    store.transaction.onabort = (ev: Event) => {\n      reject(ev);\n    };\n    store.transaction.onerror = (ev: Event) => {\n      reject(ev);\n    };\n  });\n\n}\n\n\nfunction validTx(db: IDBDatabase, storeName: string, mode?: 'readonly' | 'readwrite' | 'versionchange' | undefined): IDBTransaction {\n  const tx = db.transaction(storeName, mode);\n  if (!tx) {\n    throw new Error(`Cannot get transaction '${storeName}'`);\n  }\n  return tx;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderedDataStoreIdxServiceStore.html":{"url":"interfaces/OrderedDataStoreIdxServiceStore.html","title":"interface - OrderedDataStoreIdxServiceStore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OrderedDataStoreIdxServiceStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ordered-data-store-idx.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        indices\n                                \n                                \n                                        keyPath\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        indices\n                                    \n                                \n                                \n                                    \n                                        indices:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keyPath\n                                    \n                                \n                                \n                                    \n                                        keyPath:     string | Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Cursor } from './cursor';\n\n\nexport class NotFoundResourceError implements Error {\n  readonly name: string;\n  constructor(public message: string) {\n    this.name = this.constructor.name;\n  }\n}\n\nexport interface OrderedDataStoreIdxServiceIndex {\n  name: string;\n  keyPath: string | Array;\n  unique: boolean;\n}\n\nexport interface OrderedDataStoreIdxServiceStore {\n  name: string;\n  keyPath: string | Array;\n  indices: Array;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderedDataStoreIdxService {\n\n  private indexedDB: IDBFactory;\n  private db: IDBDatabase | undefined;\n  private dbName: string;\n\n  constructor(\n  ) {\n    this.dbName = 'ngx-mugen-scroll-store';\n    this.indexedDB = window.indexedDB;\n  }\n\n  static async fetch(\n    base: OrderedDataStoreIdxService,\n    store: OrderedDataStoreIdxServiceStore,\n    key: string,\n    index: string,\n    fetcher: () => Promise,\n  ): Promise {\n    let data = await base.get(\n      store.name,\n      key,\n      index,\n    );\n    if (data) {\n      console.log(`Fetch ${store.name}.${index}.${key} from indexed db`);\n      return data;\n    }\n    data = await fetcher();\n    if (!data) {\n      throw new NotFoundResourceError(`Cannot find '${key}'`);\n    }\n    console.log(`Fetch ${store.name}.${index}.${key} from remote`);\n    await base.add(\n      store.name,\n      data,\n    );\n    return data;\n  }\n\n  private validDB(): IDBDatabase {\n    if (!this.db) {\n      throw new Error('db is undefined');\n    }\n    return this.db;\n  }\n\n\n  async init(version: number, stores: Array): Promise {\n    return new Promise((resolve, reject) => {\n      const request = this.indexedDB.open(this.dbName, version);\n      request.onsuccess = (ev: Event) => {\n        this.db = (ev.target as any).result as IDBDatabase;\n        resolve();\n      };\n      request.onupgradeneeded = async (ev: Event) => {\n        this.db = (ev.target as any).result as IDBDatabase;\n        const db = this.db;\n        const resultsInitStore: Array> = [];\n        stores.forEach(async store => {\n          resultsInitStore.push(initStore(db, store.name, store.keyPath, store.indices));\n        });\n        for (const result of resultsInitStore) {\n          await result;\n        }\n        resolve();\n      };\n      request.onblocked = (ev: Event) => {\n        console.error(ev);\n        reject(ev);\n      };\n      request.onerror = (ev: Event) => {\n        console.error(ev);\n        reject(ev);\n      };\n    });\n  }\n\n  async add(storeName: string, ...args: Array): Promise {\n    const db = this.validDB();\n    const tx = validTx(db, storeName, 'readwrite');\n    args.forEach((arg: T) => {\n      tx.objectStore(storeName).put(arg);\n    });\n  }\n\n  async get(\n    storeName: string,\n    query: string | number | Date | ArrayBufferView | ArrayBuffer | IDBArrayKey | IDBKeyRange,\n    index: string = '',\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      const db = this.validDB();\n      const tx = validTx(db, storeName, 'readonly');\n      const store = tx.objectStore(storeName);\n      let idx = null;\n      if (index) {\n        idx = store.index(index);\n      } else {\n        idx = store;\n      }\n      const r = idx.get(query);\n      r.onsuccess = (ev: Event) => {\n        resolve(r.result);\n      };\n      r.onerror = (ev: Event) => {\n        reject(r.error);\n      };\n    });\n  }\n\n  async delete(\n    storeName: string,\n    key: string | number | Date | ArrayBufferView | ArrayBuffer | IDBArrayKey | IDBKeyRange,\n    index: string = '',\n  ): Promise {\n    const db = this.validDB();\n    const tx = validTx(db, storeName, 'readwrite');\n    const store = tx.objectStore(storeName);\n    if (!index) {\n      return new Promise((resolve, reject) => {\n        const r = store.delete(key);\n        r.onsuccess = (ev: Event) => {\n          resolve();\n        };\n        r.onerror = (ev: Event) => {\n          reject();\n        };\n      });\n    }\n    const idx = store.index(index);\n    const key2 = idx.getKey(key);\n    if (!key2) {\n      return;\n    }\n    return new Promise((resolve, reject) => {\n      key2.onsuccess = (ev: Event) => {\n        const target = ev.target as any;\n        this.delete(storeName, target.result, '').then(resolve).catch(reject);\n      };\n      key2.onerror = (ev: Event) => { reject(ev); };\n    });\n  }\n\n  async clear(storeName: string): Promise {\n    const db = this.validDB();\n    const tx = validTx(db, storeName, 'readwrite');\n    const store = tx.objectStore(storeName);\n    const r = store.clear();\n    return new Promise((resolve, reject) => {\n      r.onsuccess = (ev: Event) => {\n        resolve();\n      };\n      r.onerror = (ev: Event) => {\n        reject();\n      };\n    });\n  }\n\n  async clearAll(): Promise {\n    const db = this.validDB();\n    const objectStoreNames = db.objectStoreNames;\n    for (let i = 0; i (\n    storeName: string,\n    indexName: string,\n    current: Cursor,\n    n: number,\n    includeEqual: boolean = false,\n    end: Cursor | null = null,\n  ): Promise> {\n    let range = IDBKeyRange.lowerBound(current.getItems(), !includeEqual);\n    if (end) {\n      range = IDBKeyRange.bound(\n        current.getItems(),\n        end.getItems(),\n        !includeEqual,\n        true,\n      );\n    }\n    return await this.iter(\n      storeName,\n      indexName,\n      current.getItems(),\n      range,\n      'next',\n      n,\n    );\n  }\n\n  async getSmallerN(\n    storeName: string,\n    indexName: string,\n    current: Cursor,\n    n: number,\n    includeEqual: boolean = false,\n    end: Cursor | null = null,\n  ): Promise> {\n    let range = IDBKeyRange.upperBound(current.getItems(), !includeEqual);\n    if (end) {\n      range = IDBKeyRange.bound(\n        end.getItems(),\n        current.getItems(),\n        true,\n        !includeEqual,\n      );\n    }\n    return await this.iter(\n      storeName,\n      indexName,\n      current.getItems(),\n      range,\n      'prev',\n      n,\n    );\n  }\n\n  private async iter(\n    storeName: string,\n    indexName: string,\n    current: Array,\n    range: IDBKeyRange,\n    direction: 'next' | 'prev',\n    n: number,\n  ): Promise> {\n    // console.log(`Fetch ${storeName}.${indexName} at ${current.toString()}`);\n    // console.log(`From ${range.lower} to ${range.upper} sort ${direction} ${n} from indexed db`);\n    const ret: Array = [];\n    return new Promise>((resolve, reject) => {\n      const db = this.validDB();\n      const tx = validTx(db, storeName, 'readonly');\n      let i = 0;\n      const r = tx.objectStore(storeName).index(indexName).openCursor(range, direction);\n      r.onsuccess = (ev: Event) => {\n        const cursor: IDBCursorWithValue = (ev.target as any).result;\n        if (!cursor) {\n          // EOF\n          resolve(ret);\n          return;\n        }\n        if (i >= n) {\n          resolve(ret);\n          return;\n        }\n        if (direction === 'next') {\n          ret.push(cursor.value);\n        } else {\n          ret.unshift(cursor.value);\n        }\n        cursor.continue();\n        i++;\n      };\n      r.onerror = (ev: Event) => {\n        reject(ev);\n      };\n    });\n  }\n\n  public async filter(\n    storeName: string,\n    direction: 'next' | 'prev',\n    cb: (v: T, i: number) => boolean,\n  ): Promise> {\n    console.log(`Filter ${storeName} from indexed db`);\n    const ret: Array = [];\n    return new Promise>((resolve, reject) => {\n      const db = this.validDB();\n      const tx = validTx(db, storeName, 'readonly');\n      const r = tx.objectStore(storeName).getAll();\n      let i = 0;\n      r.onsuccess = (ev: Event) => {\n        const r2 = ev.target as IDBRequest;\n        (r2.result as Array).forEach((v: T) => {\n          if (cb(v, i)) {\n            if (direction === 'next') {\n              ret.push(v);\n            } else {\n              ret.unshift(v);\n            }\n          }\n        });\n        i++;\n        resolve(ret);\n      };\n      r.onerror = (ev: Event) => {\n        reject(ev);\n      };\n    });\n  }\n}\n\nasync function initStore(\n  db: IDBDatabase,\n  storeName: string,\n  keyPath: string | Array,\n  indecies: Array = [],\n): Promise {\n  return new Promise((resolve, reject) => {\n    if (db.objectStoreNames.contains(storeName)) {\n      return resolve();\n    }\n    const store = db.createObjectStore(\n      storeName,\n      {\n        keyPath,\n      },\n    );\n    indecies.forEach(v => {\n      store.createIndex(\n        v.name,\n        v.keyPath,\n        {\n          unique: v.unique,\n        },\n      );\n    });\n    store.transaction.oncomplete = (ev: Event) => {\n      resolve();\n    };\n    store.transaction.onabort = (ev: Event) => {\n      reject(ev);\n    };\n    store.transaction.onerror = (ev: Event) => {\n      reject(ev);\n    };\n  });\n\n}\n\n\nfunction validTx(db: IDBDatabase, storeName: string, mode?: 'readonly' | 'readwrite' | 'versionchange' | undefined): IDBTransaction {\n  const tx = db.transaction(storeName, mode);\n  if (!tx) {\n    throw new Error(`Cannot get transaction '${storeName}'`);\n  }\n  return tx;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScrollBottomEvent.html":{"url":"interfaces/ScrollBottomEvent.html","title":"interface - ScrollBottomEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ScrollBottomEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngx-mugen-scroll.component.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, Component, ContentChild, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MugenScrollTopDirective } from './mugen-scroll-top.directive';\nimport { MugenScrollBottomDirective } from './mugen-scroll-bottom.directive';\nimport { DataProvider } from './mugen-scroll';\nimport { CursorStoreService } from './cursor-store.service';\nimport { MugenScrollDataDirective } from './mugen-scroll-data.directive';\n\nexport interface ScrollBottomEvent { }\nexport interface ScrollTopEvent { }\n\n@Component({\n  selector: 'lib-ngx-mugen-scroll',\n  template: `\n    \n  `,\n  styles: [\n  ]\n})\nexport class NgxMugenScrollComponent implements OnInit, AfterViewInit {\n\n  @ContentChild(MugenScrollBottomDirective)\n  public bottomDirective: MugenScrollBottomDirective | undefined;\n\n  @ContentChild(MugenScrollTopDirective)\n  public topDirective: MugenScrollTopDirective | undefined;\n\n  @ContentChild(MugenScrollDataDirective)\n  public dataDirective: MugenScrollDataDirective | undefined;\n\n  @Input()\n  public provider: DataProvider | undefined;\n\n  @Input()\n  public uniqId: string;\n\n  @Input()\n  public scrollBottomOnInit: boolean;\n\n  @Input()\n  public countPerLoad: number;\n\n  @Input()\n  public autoFetchingBottom: boolean;\n\n  @Input()\n  public autoFetchingTop: boolean;\n\n  @Input()\n  public autoLoadScrollPosition: boolean;\n\n  @Output()\n  public bottom: EventEmitter;\n\n  @Output()\n  public top: EventEmitter;\n\n  private intersectionObserver: IntersectionObserver | undefined;\n\n  constructor(\n    private el: ElementRef,\n    private cursorStoreService: CursorStoreService,\n  ) {\n    this.uniqId = '';\n    this.scrollBottomOnInit = false;\n    this.countPerLoad = 50;\n    this.bottom = new EventEmitter();\n    this.top = new EventEmitter();\n    this.autoFetchingBottom = true;\n    this.autoFetchingTop = true;\n    this.autoLoadScrollPosition = true;\n  }\n\n  ngOnInit(): void {\n  }\n\n  async ngAfterViewInit(): Promise {\n    this.init();\n  }\n\n  init(): void {\n    // Validate current state\n    if (this.bottomDirective === undefined) {\n      throw new Error('MugenScrollBottomDirective is undefined in ng-content');\n    }\n    if (this.topDirective === undefined) {\n      throw new Error('MugenScrollTopDirective is undefined in ng-content');\n    }\n    if (this.dataDirective === undefined) {\n      throw new Error('MugenScrollDataDirective is undefined in ng-content');\n    }\n    if (this.provider === undefined) {\n      throw new Error('provider is undefined in ng-content');\n    }\n    // Clear previous state\n    this.dataDirective.clear();\n    this.dataDirective.newCursor = this.provider.newCursor;\n    if (this.intersectionObserver !== undefined) {\n      this.intersectionObserver.disconnect();\n      this.intersectionObserver = undefined;\n    }\n    // New current state\n    this.intersectionObserver = new IntersectionObserver(\n      (entities: Array): void => {\n        entities.forEach(entity => {\n          if (this.bottomDirective === undefined) {\n            throw new Error('MugenScrollBottomDirective is undefined in ng-content');\n          }\n          if (this.topDirective === undefined) {\n            throw new Error('MugenScrollTopDirective is undefined in ng-content');\n          }\n          if (entity.target === this.topDirective.element && entity.isIntersecting === true) {\n            this.top.emit({});\n            if (this.autoFetchingTop === false) {\n              return;\n            }\n            this.fetchTop();\n          }\n          if (entity.target === this.bottomDirective.element && entity.isIntersecting === true) {\n            this.bottom.emit({});\n            if (this.autoFetchingBottom === false) {\n              return;\n            }\n            this.fetchBottom();\n          }\n        });\n      },\n      {\n        root: this.el.nativeElement,\n        rootMargin: '0px',\n        threshold: 1.0,\n      },\n    );\n    this.intersectionObserver.observe(this.bottomDirective.element);\n    this.intersectionObserver.observe(this.topDirective.element);\n    // Load data\n    if (this.autoLoadScrollPosition) {\n      const cursorStoreInfo = this.cursorStoreService.load(this.provider.scrollId);\n      if (cursorStoreInfo !== undefined) {\n        this.provider.fetchOnLoad(cursorStoreInfo).then(datas => {\n          if (this.dataDirective === undefined) {\n            throw new Error('MugenScrollDataDirective is undefined in ng-content');\n          }\n          this.dataDirective.push(...datas);\n          (this.el.nativeElement as HTMLElement).scroll(0, cursorStoreInfo.scrollTop);\n        });\n        return;\n      }\n    }\n    this.provider.fetchOnInit(this.countPerLoad).then(datas => {\n      if (this.dataDirective === undefined) {\n        throw new Error('MugenScrollDataDirective is undefined in ng-content');\n      }\n      this.dataDirective.push(...datas);\n      if (this.scrollBottomOnInit) {\n        this.scrollBottom();\n      }\n    });\n  }\n\n  saveScrollPosition(): void {\n    if (this.provider === undefined) {\n      console.error('provider is undefined in ng-content');\n      return;\n    }\n    if (this.dataDirective === undefined) {\n      console.error('MugenScrollDataDirective is undefined in ng-content');\n      return;\n    }\n    if (this.dataDirective.top === undefined) {\n      console.error('MugenScrollDataDirective.top is undefined in ng-content');\n      return;\n    }\n    if (this.dataDirective.bottom === undefined) {\n      console.error('MugenScrollDataDirective.bottom is undefined in ng-content');\n      return;\n    }\n    this.cursorStoreService.save(\n      this.provider.scrollId,\n      this.provider.newCursor(this.dataDirective.bottom),\n      this.provider.newCursor(this.dataDirective.top),\n      this.countPerLoad,\n      (this.el.nativeElement as HTMLElement).scrollTop,\n    );\n  }\n\n  async fetchBottom(): Promise {\n    if (this.provider === undefined) {\n      throw new Error('provider is undefined in ng-content');\n    }\n    if (this.dataDirective === undefined) {\n      throw new Error('MugenScrollDataDirective is undefined in ng-content');\n    }\n    if (this.dataDirective.bottom === undefined) {\n      return;\n    }\n    const datas = await this.provider.fetchBottom(\n      this.provider.newCursor(this.dataDirective.bottom),\n      this.countPerLoad,\n      false,\n    );\n    this.dataDirective.push(...datas);\n  }\n\n  async fetchTop(): Promise {\n    if (this.provider === undefined) {\n      throw new Error('provider is undefined in ng-content');\n    }\n    if (this.dataDirective === undefined) {\n      throw new Error('MugenScrollDataDirective is undefined in ng-content');\n    }\n    if (this.dataDirective.top === undefined) {\n      return;\n    }\n    const datas = await this.provider.fetchTop(\n      this.provider.newCursor(this.dataDirective.top),\n      this.countPerLoad,\n      false,\n    );\n    const topBeforeAdded = this.dataDirective.top;\n    this.dataDirective.unshift(...datas);\n    this.scrollTopAt(topBeforeAdded);\n  }\n\n  private scrollTopAt(at: object): void {\n    if (this.provider === undefined) {\n      throw new Error('provider is undefined in ng-content');\n    }\n    if (this.dataDirective === undefined) {\n      throw new Error('MugenScrollDataDirective is undefined in ng-content');\n    }\n    if (this.dataDirective.top !== undefined) {\n      if (this.provider.newCursor(this.dataDirective.top).toString() === this.provider.newCursor(at).toString()) {\n        return;\n      }\n    }\n    let s = 0;\n    const cursor = this.provider.newCursor(at);\n    const el = this.el.nativeElement as HTMLElement;\n    for (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScrollTopEvent.html":{"url":"interfaces/ScrollTopEvent.html","title":"interface - ScrollTopEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ScrollTopEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/ngx-mugen-scroll.component.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, Component, ContentChild, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MugenScrollTopDirective } from './mugen-scroll-top.directive';\nimport { MugenScrollBottomDirective } from './mugen-scroll-bottom.directive';\nimport { DataProvider } from './mugen-scroll';\nimport { CursorStoreService } from './cursor-store.service';\nimport { MugenScrollDataDirective } from './mugen-scroll-data.directive';\n\nexport interface ScrollBottomEvent { }\nexport interface ScrollTopEvent { }\n\n@Component({\n  selector: 'lib-ngx-mugen-scroll',\n  template: `\n    \n  `,\n  styles: [\n  ]\n})\nexport class NgxMugenScrollComponent implements OnInit, AfterViewInit {\n\n  @ContentChild(MugenScrollBottomDirective)\n  public bottomDirective: MugenScrollBottomDirective | undefined;\n\n  @ContentChild(MugenScrollTopDirective)\n  public topDirective: MugenScrollTopDirective | undefined;\n\n  @ContentChild(MugenScrollDataDirective)\n  public dataDirective: MugenScrollDataDirective | undefined;\n\n  @Input()\n  public provider: DataProvider | undefined;\n\n  @Input()\n  public uniqId: string;\n\n  @Input()\n  public scrollBottomOnInit: boolean;\n\n  @Input()\n  public countPerLoad: number;\n\n  @Input()\n  public autoFetchingBottom: boolean;\n\n  @Input()\n  public autoFetchingTop: boolean;\n\n  @Input()\n  public autoLoadScrollPosition: boolean;\n\n  @Output()\n  public bottom: EventEmitter;\n\n  @Output()\n  public top: EventEmitter;\n\n  private intersectionObserver: IntersectionObserver | undefined;\n\n  constructor(\n    private el: ElementRef,\n    private cursorStoreService: CursorStoreService,\n  ) {\n    this.uniqId = '';\n    this.scrollBottomOnInit = false;\n    this.countPerLoad = 50;\n    this.bottom = new EventEmitter();\n    this.top = new EventEmitter();\n    this.autoFetchingBottom = true;\n    this.autoFetchingTop = true;\n    this.autoLoadScrollPosition = true;\n  }\n\n  ngOnInit(): void {\n  }\n\n  async ngAfterViewInit(): Promise {\n    this.init();\n  }\n\n  init(): void {\n    // Validate current state\n    if (this.bottomDirective === undefined) {\n      throw new Error('MugenScrollBottomDirective is undefined in ng-content');\n    }\n    if (this.topDirective === undefined) {\n      throw new Error('MugenScrollTopDirective is undefined in ng-content');\n    }\n    if (this.dataDirective === undefined) {\n      throw new Error('MugenScrollDataDirective is undefined in ng-content');\n    }\n    if (this.provider === undefined) {\n      throw new Error('provider is undefined in ng-content');\n    }\n    // Clear previous state\n    this.dataDirective.clear();\n    this.dataDirective.newCursor = this.provider.newCursor;\n    if (this.intersectionObserver !== undefined) {\n      this.intersectionObserver.disconnect();\n      this.intersectionObserver = undefined;\n    }\n    // New current state\n    this.intersectionObserver = new IntersectionObserver(\n      (entities: Array): void => {\n        entities.forEach(entity => {\n          if (this.bottomDirective === undefined) {\n            throw new Error('MugenScrollBottomDirective is undefined in ng-content');\n          }\n          if (this.topDirective === undefined) {\n            throw new Error('MugenScrollTopDirective is undefined in ng-content');\n          }\n          if (entity.target === this.topDirective.element && entity.isIntersecting === true) {\n            this.top.emit({});\n            if (this.autoFetchingTop === false) {\n              return;\n            }\n            this.fetchTop();\n          }\n          if (entity.target === this.bottomDirective.element && entity.isIntersecting === true) {\n            this.bottom.emit({});\n            if (this.autoFetchingBottom === false) {\n              return;\n            }\n            this.fetchBottom();\n          }\n        });\n      },\n      {\n        root: this.el.nativeElement,\n        rootMargin: '0px',\n        threshold: 1.0,\n      },\n    );\n    this.intersectionObserver.observe(this.bottomDirective.element);\n    this.intersectionObserver.observe(this.topDirective.element);\n    // Load data\n    if (this.autoLoadScrollPosition) {\n      const cursorStoreInfo = this.cursorStoreService.load(this.provider.scrollId);\n      if (cursorStoreInfo !== undefined) {\n        this.provider.fetchOnLoad(cursorStoreInfo).then(datas => {\n          if (this.dataDirective === undefined) {\n            throw new Error('MugenScrollDataDirective is undefined in ng-content');\n          }\n          this.dataDirective.push(...datas);\n          (this.el.nativeElement as HTMLElement).scroll(0, cursorStoreInfo.scrollTop);\n        });\n        return;\n      }\n    }\n    this.provider.fetchOnInit(this.countPerLoad).then(datas => {\n      if (this.dataDirective === undefined) {\n        throw new Error('MugenScrollDataDirective is undefined in ng-content');\n      }\n      this.dataDirective.push(...datas);\n      if (this.scrollBottomOnInit) {\n        this.scrollBottom();\n      }\n    });\n  }\n\n  saveScrollPosition(): void {\n    if (this.provider === undefined) {\n      console.error('provider is undefined in ng-content');\n      return;\n    }\n    if (this.dataDirective === undefined) {\n      console.error('MugenScrollDataDirective is undefined in ng-content');\n      return;\n    }\n    if (this.dataDirective.top === undefined) {\n      console.error('MugenScrollDataDirective.top is undefined in ng-content');\n      return;\n    }\n    if (this.dataDirective.bottom === undefined) {\n      console.error('MugenScrollDataDirective.bottom is undefined in ng-content');\n      return;\n    }\n    this.cursorStoreService.save(\n      this.provider.scrollId,\n      this.provider.newCursor(this.dataDirective.bottom),\n      this.provider.newCursor(this.dataDirective.top),\n      this.countPerLoad,\n      (this.el.nativeElement as HTMLElement).scrollTop,\n    );\n  }\n\n  async fetchBottom(): Promise {\n    if (this.provider === undefined) {\n      throw new Error('provider is undefined in ng-content');\n    }\n    if (this.dataDirective === undefined) {\n      throw new Error('MugenScrollDataDirective is undefined in ng-content');\n    }\n    if (this.dataDirective.bottom === undefined) {\n      return;\n    }\n    const datas = await this.provider.fetchBottom(\n      this.provider.newCursor(this.dataDirective.bottom),\n      this.countPerLoad,\n      false,\n    );\n    this.dataDirective.push(...datas);\n  }\n\n  async fetchTop(): Promise {\n    if (this.provider === undefined) {\n      throw new Error('provider is undefined in ng-content');\n    }\n    if (this.dataDirective === undefined) {\n      throw new Error('MugenScrollDataDirective is undefined in ng-content');\n    }\n    if (this.dataDirective.top === undefined) {\n      return;\n    }\n    const datas = await this.provider.fetchTop(\n      this.provider.newCursor(this.dataDirective.top),\n      this.countPerLoad,\n      false,\n    );\n    const topBeforeAdded = this.dataDirective.top;\n    this.dataDirective.unshift(...datas);\n    this.scrollTopAt(topBeforeAdded);\n  }\n\n  private scrollTopAt(at: object): void {\n    if (this.provider === undefined) {\n      throw new Error('provider is undefined in ng-content');\n    }\n    if (this.dataDirective === undefined) {\n      throw new Error('MugenScrollDataDirective is undefined in ng-content');\n    }\n    if (this.dataDirective.top !== undefined) {\n      if (this.provider.newCursor(this.dataDirective.top).toString() === this.provider.newCursor(at).toString()) {\n        return;\n      }\n    }\n    let s = 0;\n    const cursor = this.provider.newCursor(at);\n    const el = this.el.nativeElement as HTMLElement;\n    for (let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/cursor-store.service.ts\n            \n            injectable\n            CursorStoreService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/cursor-store.service.ts\n            \n            interface\n            CursorStoreInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lib/cursor.ts\n            \n            class\n            Cursor\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lib/mugen-scroll-bottom.directive.ts\n            \n            directive\n            MugenScrollBottomDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/mugen-scroll-data.directive.ts\n            \n            directive\n            MugenScrollDataDirective\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/lib/mugen-scroll-data.directive.ts\n            \n            interface\n            Ctx\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/mugen-scroll-top.directive.ts\n            \n            directive\n            MugenScrollTopDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lib/mugen-scroll.ts\n            \n            interface\n            DataProvider\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/lib/ngx-mugen-scroll.component.ts\n            \n            component\n            NgxMugenScrollComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/lib/ngx-mugen-scroll.component.ts\n            \n            interface\n            ScrollBottomEvent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/ngx-mugen-scroll.component.ts\n            \n            interface\n            ScrollTopEvent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/ordered-data-store-idx.service.ts\n            \n            class\n            NotFoundResourceError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/ordered-data-store-idx.service.ts\n            \n            injectable\n            OrderedDataStoreIdxService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/lib/ordered-data-store-idx.service.ts\n            \n            interface\n            OrderedDataStoreIdxServiceIndex\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/ordered-data-store-idx.service.ts\n            \n            interface\n            OrderedDataStoreIdxServiceStore\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/ordered-data-store-idx.service.ts\n            \n            function\n            initStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lib/ordered-data-store-idx.service.ts\n            \n            function\n            validTx\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            tslib : ^2.0.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^11.0.9\n        \n            @angular/core : ^11.0.9\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            initStore   (src/.../ordered-data-store-idx.service.ts)\n                        \n                        \n                            validTx   (src/.../ordered-data-store-idx.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/ordered-data-store-idx.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            initStore\n                        \n                        \n                    \n                \n            \n            \n                \ninitStore(db, storeName, keyPath, indecies)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    db\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    storeName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    keyPath\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    indecies\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validTx\n                        \n                        \n                    \n                \n            \n            \n                \nvalidTx(db, storeName, mode?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    db\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    storeName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mode\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     IDBTransaction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n∞\nNgxMugenScroll\nThis library was generated with Angular CLI version 11.0.9.\nThe infinite scroll library for AngularJS.\nAPI references\nExample use\nYou need to import NgxMugenScrollModule.\nimport { NgxMugenScrollModule } from 'ngx-mugen-scroll';\n...\n@NgModule({\n  imports: [\n      ...\n    NgxMugenScrollModule,\n      ...\n  ],\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright 2021 Taito Suzuki\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxMugenScrollModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxMugenScrollModule\n\n\n\ncluster_NgxMugenScrollModule_declarations\n\n\n\ncluster_NgxMugenScrollModule_exports\n\n\n\n\nMugenScrollBottomDirective\n\nMugenScrollBottomDirective\n\n\n\nNgxMugenScrollModule\n\nNgxMugenScrollModule\n\nNgxMugenScrollModule -->\n\nMugenScrollBottomDirective->NgxMugenScrollModule\n\n\n\n\n\nMugenScrollDataDirective\n\nMugenScrollDataDirective\n\nNgxMugenScrollModule -->\n\nMugenScrollDataDirective->NgxMugenScrollModule\n\n\n\n\n\nMugenScrollTopDirective\n\nMugenScrollTopDirective\n\nNgxMugenScrollModule -->\n\nMugenScrollTopDirective->NgxMugenScrollModule\n\n\n\n\n\nNgxMugenScrollComponent\n\nNgxMugenScrollComponent\n\nNgxMugenScrollModule -->\n\nNgxMugenScrollComponent->NgxMugenScrollModule\n\n\n\n\n\nMugenScrollBottomDirective \n\nMugenScrollBottomDirective \n\nMugenScrollBottomDirective  -->\n\nNgxMugenScrollModule->MugenScrollBottomDirective \n\n\n\n\n\nMugenScrollDataDirective \n\nMugenScrollDataDirective \n\nMugenScrollDataDirective  -->\n\nNgxMugenScrollModule->MugenScrollDataDirective \n\n\n\n\n\nMugenScrollTopDirective \n\nMugenScrollTopDirective \n\nMugenScrollTopDirective  -->\n\nNgxMugenScrollModule->MugenScrollTopDirective \n\n\n\n\n\nNgxMugenScrollComponent \n\nNgxMugenScrollComponent \n\nNgxMugenScrollComponent  -->\n\nNgxMugenScrollModule->NgxMugenScrollComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
